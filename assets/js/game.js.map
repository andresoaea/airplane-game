{"version":3,"sources":["webpack:///./src/js/Socket.js","webpack:///./src/js/game.js","webpack:///./src/js/scenes/MainScene.js","webpack:///./src/sass/game.scss?4097"],"names":["Socket","conn","WebSocket","onopen","e","console","log","msg","send","window","axios","require","defaults","headers","common","SOCKET_URL","mainScene","MainScene","config","type","Phaser","AUTO","width","height","parent","title","url","version","game","Game","scene","add","start","key","physics","arcade","cells","onmessage","data","JSON","parse","opponentDisconnected","restart","cellId","cellClicked","graphics","fillStyle","color","fillRectShape","rect","x","y","drawPlayerMap","sqareWidth","cellsNum","i","j","drawRect","Geom","Rectangle","lineStyle","strokeRectShape","setInteractive","Contains","id","on","stringify","Scene"],"mappings":"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","file":"/js/game.js","sourcesContent":["class Socket {\n    constructor() {\n        const conn = new WebSocket('ws://localhost:8080/comm');\n        conn.onopen = function(e) {\n            console.log('Connection established!');\n        };\n        // conn.onmessage = (e) => {\n        //     console.log(e.data);\n        // };\n        this.conn = conn;\n    }\n\n    send(msg) {\n        return this.conn.send(msg);\n    }\n}\n\nexport default new Socket();\n","import Phaser from 'phaser';\n// import moment, { lang } from 'moment';\n// import Swal from 'sweetalert2';\n\n// window.moment = moment;\n// window.Swal = Swal;\n\n// //indow.jQuery = window.$ = require('jquery');\nwindow.axios = require('axios');\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\nwindow.SOCKET_URL = 'ws://localhost:8080/play';\n\nimport MainScene from './scenes/MainScene';\nconst mainScene = new MainScene();\n\nlet config = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 458,\n    parent: 'game',\n    // physics: {\n    //     default: 'arcade',\n    //     arcade: {\n    //         gravity: { y: 800 },\n    //         //debug: true\n    //     },\n    // },\n    title: 'The Airplanes with Friends',\n    url: '',\n    version: '1.0.0',\n};\n\nlet game = new Phaser.Game(config);\ngame.scene.add('MainScene', mainScene);\ngame.scene.start('MainScene');\nwindow.game = game;\n","import Socket from '../Socket';\n\nclass MainScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'MainScene',\n            physics: {\n                arcade: {\n                    //debug: true,\n                },\n            },\n        });\n\n        this.cells = {};\n    }\n\n    create() {\n        Socket.conn.onmessage = (e) => {\n            console.log(e.data);\n            const msg = JSON.parse(e.data);\n\n            if (msg.opponentDisconnected) {\n                console.log('opponent disconnected');\n                this.scene.restart();\n            }\n\n            const cellId = msg.cellClicked;\n            if (!cellId) return;\n\n            const graphics = this.add.graphics({\n                fillStyle: { color: 0x0000ff },\n            });\n\n            graphics.fillRectShape(this.cells[cellId].rect);\n        };\n\n        const x = 40;\n        const y = 80;\n\n        this.drawPlayerMap(x, y);\n\n        //debug\n        window.Socket = Socket;\n        window.MainScene = this;\n\n        /// this.drawPlayerMap(440, y);\n    }\n\n    drawPlayerMap(x, y) {\n        const sqareWidth = 40;\n        const cellsNum = 8;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawRect(\n                    x + j * sqareWidth,\n                    y + i * sqareWidth,\n                    sqareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n    }\n\n    drawRect(x, y, sqareWidth, i, j) {\n        let rect = new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        var graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0x0000aa },\n        });\n        graphics.strokeRectShape(rect);\n\n        graphics.setInteractive(\n            new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth),\n            Phaser.Geom.Rectangle.Contains\n        );\n        const id = `${j + 1}${i + 1}`;\n        this.cells[id] = { graphics, rect };\n        // graphics.setData('id', id);\n        graphics.on('pointerdown', () => {\n            Socket.send(\n                JSON.stringify({\n                    cellClicked: id,\n                })\n            );\n\n            // console.log(graphics.getData('id'));\n            graphics = this.add.graphics({\n                fillStyle: { color: 0x0000ff },\n            });\n\n            graphics.fillRectShape(rect);\n        });\n    }\n}\n\nexport default MainScene;\n","// removed by extract-text-webpack-plugin"],"sourceRoot":""}