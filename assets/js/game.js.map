{"version":3,"sources":["webpack:///./src/js/GameData.js","webpack:///./src/js/Socket.js","webpack:///./src/js/components/Plane.js","webpack:///./src/js/components/Players.js","webpack:///./src/js/components/Turn.js","webpack:///./src/js/game.js","webpack:///./src/js/scenes/LoadScene.js","webpack:///./src/js/scenes/MainScene.js","webpack:///./src/js/scenes/SetOpponentScene.js","webpack:///./src/js/scenes/SetPlaneScene.js","webpack:///./src/js/scenes/StartScene.js","webpack:///./src/sass/game.scss?4097"],"names":["GameData","imageNum","getId","players","player","id","name","getParameterByName","photo","turn","Turn","opponent","setPlaneScene","game","scene","getScene","playersComponent","Players","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","Socket","queryString","$","param","gameData","conn","WebSocket","onopen","e","console","log","onmessage","msg","JSON","parse","data","handleReceivedMessage","onerror","Swal","fire","title","text","icon","showConfirmButton","action","showMyRoomId","room","setIsMyTurn","printInvalidRoom","setOpponent","startRoom","doOpponentDisconnected","doAttack","reverse","doSetOpponentData","opponentData","cellId","cellClicked","rect","cells","myPlanesCells","includes","add","image","centerX","centerY","setScale","start","readyState","CLOSED","send","stringify","Plane","config","x","y","planeNum","existing","setInteractive","setData","input","on","startDrag","planeName","stablePos","planeCells","isInDropZone","firstClickTime","pointer","targets","dragObj","checkDoubleTap","off","doDrag","stopDrag","pointerDiffY","pointerDiffX","initialPos","getData","width","dragX","dragY","dropZone","getDropZone","height","repositionToClosest","setPlaneCells","goToInitialPosition","tweens","scaleX","scaleY","duration","planes","axis","isVertical","angle","repositionVertical","repositionHorizontal","i","closest","relativeDistance","newPos","dropZoneRect","headCellId","planeData","getPlanePositionData","headPoint","forEach","cell","headCords","split","map","num","parseInt","schema","originX","diff","originY","length","line","j","cellPlaceholder","push","currPlaneExists","Object","keys","instance","isOverlapping","checkOverlap","shift","firstPlaneCells","overlap","cellSize","getTime","elapsed","d","Date","Phaser","GameObjects","Sprite","printBackground","printPlayer","loadOpponent","Geom","Rectangle","graphics","fillStyle","fillRectShape","textures","exists","printOpponent","load","printPlayerPhoto","printPlayerName","key","shape","fillRoundedRect","mask","createGeometryMask","img","setDepth","setMask","setOrigin","displayWidth","displayHeight","color","fontFamily","stroke","strokeThickness","fontSize","isMyTurn","printTurnText","updateTurnText","bool","getTurnText","setTimeout","setText","setColor","tween","yoyo","onComplete","require","type","AUTO","parent","version","Game","LoadScene","MainScene","StartScene","SetPlaneScene","SetOpponentScene","showPreloader","fontStyle","shadow","offsetX","offsetY","blur","fill","progressBar","progressBox","fillRect","cameras","main","loadingText","make","style","percentText","value","clear","destroy","Scene","planesData","myPlanes","setBackgroundColor","drawSceneBackground","socket","planesCells","drawPlayerMap","drawPlanes","setScene","planeKey","playerMapLeftDiff","plane","planeImage","texture","setAngle","sqareWidth","cellsNum","drawRect","lineStyle","strokeRectShape","Contains","owner","isEmptyObject","scaleText","drawBgRect","myRoom","events","randSceneId","Math","floor","random","html","el","document","createElement","innerHTML","classList","append","one","getMyRoom","bind","roomToGo","val","$sceneHtml","find","$colCreateRoom","after","remove","hide","restart","fadeIn","fadeOut","timer","then","stop","printOpponentConnected","physics","arcade","plane1","plane2","addStartGame","mainScene","launch","bringToTop","useHandCursor","allPlanesCells","keysLength","cl","squareWidth","drawBorder","playBtn","setAlpha","alpha","repeat","ease"],"mappings":"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","file":"/js/game.js","sourcesContent":["import Players from './components/Players';\nimport Turn from './components/Turn';\n\nclass GameData {\n    constructor() {\n        let imageNum = this.getId() == 1 ? 1 : 2;\n        //console.log(imageNum);\n        this.players = {\n            player: {\n                id: this.getId(),\n                name: 'User' + (this.getParameterByName('userId') ?? '1'),\n                photo: `assets/images/profile-${imageNum}.jpg`,\n            },\n        };\n\n        this.turn = new Turn();\n    }\n\n    // Called from Socket class\n    setOpponent(opponent) {\n        this.players.opponent = opponent;\n\n        const setPlaneScene = game.scene.getScene('SetPlaneScene');\n        setPlaneScene.playersComponent = new Players(setPlaneScene);\n    }\n\n    // helper for debugging\n    getId() {\n        return this.getParameterByName('userId') ?? 1;\n    }\n    getParameterByName(name, url = window.location.href) {\n        name = name.replace(/[\\[\\]]/g, '\\\\$&');\n        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    }\n}\n\nexport default GameData;\n","class Socket {\n    constructor() {\n        this.scene = game.scene.getScene('MainScene');\n        const queryString = $.param(game.gameData.players.player);\n        const url = `ws://192.168.0.105:8080/comm?${queryString}`;\n        const conn = new WebSocket(url);\n\n        conn.onopen = (e) => {\n            console.log(`Connection established to ${url}`);\n        };\n        this.conn = conn;\n        conn.onmessage = (e) => {\n            // console.log(e.data);\n            const msg = JSON.parse(e.data);\n            this.handleReceivedMessage(msg);\n        };\n\n        conn.onerror = () => {\n            Swal.fire({\n                title: 'Ouups!',\n                text:\n                    \"We can't connect to the server now. Please try again later.\",\n                icon: 'error',\n                showConfirmButton: false,\n            });\n        };\n    }\n\n    handleReceivedMessage(msg) {\n        if (!msg.action) return;\n        console.log(msg);\n\n        switch (msg.action) {\n            case 'setMyRoom':\n                game.scene.getScene('SetOpponentScene').showMyRoomId(msg.room);\n                game.gameData.turn.setIsMyTurn(true);\n                break;\n            case 'invalidRoom':\n                game.scene.getScene('SetOpponentScene').printInvalidRoom();\n                break;\n            case 'enterToRoom':\n                game.gameData.setOpponent(msg.opponent);\n                game.scene.getScene('SetOpponentScene').startRoom(msg.room);\n                break;\n            case 'opponentDisconnected':\n                this.doOpponentDisconnected(msg);\n                break;\n            case 'attack':\n                this.doAttack(msg);\n                game.gameData.turn.reverse();\n                break;\n            case 'setOpponentData':\n                this.doSetOpponentData(msg);\n                break;\n        }\n    }\n\n    doSetOpponentData(msg) {\n        this.scene.opponentData = msg.opponentData;\n    }\n\n    doAttack(msg) {\n        const cellId = msg.cellClicked;\n        if (!cellId) return;\n\n        const rect = this.scene.cells[cellId.replace('p', 'o')].rect;\n\n        if (this.scene.myPlanesCells.includes(cellId.replace('p', ''))) {\n            // Targeted point\n            this.scene.add\n                .image(rect.centerX, rect.centerY, 'fire')\n                .setScale(0.8);\n        } else {\n            // Missed point\n            this.scene.add.image(rect.centerX, rect.centerY, 'x').setScale(0.8);\n        }\n\n        // const graphics = this.scene.add.graphics({\n        //     fillStyle: { color },\n        // });\n\n        // graphics.fillRectShape(this.scene.cells[cellId.replace('p', 'o')].rect);\n    }\n\n    doOpponentDisconnected(msg) {\n        console.log('opponent disconnected');\n        this.scene.scene.start('SetPlaneScene');\n    }\n    // Used external\n    send(msg) {\n        if (this.conn.readyState === WebSocket.CLOSED) return;\n        return this.conn.send(JSON.stringify(msg));\n    }\n}\n\nexport default Socket;\n","class Plane extends Phaser.GameObjects.Sprite {\n    constructor(config) {\n        super(config.scene, config.x, config.y, `plane-${config.planeNum}`);\n        config.scene.add.existing(this);\n\n        this.scene = config.scene;\n\n        this.setScale(0.4)\n            .setInteractive()\n            .setData('initialPos', {\n                x: this.x,\n                y: this.y,\n            });\n\n        this.scene.input.on('pointerdown', this.startDrag, this);\n\n        // Other variables\n\n        this.planeName = `plane${config.planeNum}`;\n        this.stablePos = [\n            {\n                x: this.x,\n                y: this.y,\n            },\n        ];\n        this.planeCells = [];\n        this.isInDropZone = false;\n        this.firstClickTime = 0;\n        // this.lastPos = { x: 0, y: 0 };\n        // this.lastAngle = 0;\n    }\n\n    startDrag(pointer, targets) {\n        if (targets[0] !== this) return;\n        this.dragObj = targets[0];\n\n        // this.dragObj.depth++;\n        // this.scene.planes.map((plane) => {\n        //     return plane.instance.depth--;\n        // });\n\n        // if (this.scene.planes.length === 2) {\n        //     this.scene.planes.find((plane) => {\n        //         return plane.instance === this;\n        //     });\n        // }\n\n        //  console.log(this.dragObj.depth);\n        // console.log(this.planeName);\n\n        this.checkDoubleTap();\n        this.scene.input.off('pointerdown', this.startDrag, this);\n        this.scene.input.on('pointermove', this.doDrag, this);\n        this.scene.input.on('pointerup', this.stopDrag, this);\n\n        if (typeof this.dragObj !== 'undefined') {\n            this.pointerDiffY = pointer.y - this.dragObj.y;\n            this.pointerDiffX = pointer.x - this.dragObj.x;\n        }\n    }\n\n    doDrag(pointer, targets) {\n        if (targets[0] !== this) return;\n\n        if (typeof this.dragObj !== 'undefined') {\n            // Move\n            this.dragObj.x = pointer.x - this.pointerDiffX;\n            this.dragObj.y = pointer.y - this.pointerDiffY;\n\n            let initialPos = this.dragObj.getData('initialPos');\n\n            // Scale\n            if (pointer.x < initialPos.x) {\n                if (this.isInDropZone) {\n                    this.dragObj.setScale(1.1);\n                } else {\n                    this.dragObj.setScale(\n                        (game.config.width - this.dragObj.x) / 450\n                    );\n                }\n            }\n        }\n    }\n\n    stopDrag(pointer, targets) {\n        if (targets[0] !== this) return;\n\n        this.scene.input.on('pointerdown', this.startDrag, this);\n        this.scene.input.off('pointermove', this.doDrag, this);\n        this.scene.input.off('pointerup', this.stopDrag, this);\n\n        if (typeof this.dragObj == 'undefined') return;\n\n        // Check if in drop zone\n        let dragX = this.dragObj.x;\n        let dragY = this.dragObj.y;\n\n        let dropZone = this.getDropZone();\n\n        if (\n            dragX > dropZone.x &&\n            dragX < dropZone.x + dropZone.width &&\n            dragY > dropZone.y &&\n            dragY < dropZone.y + dropZone.height\n        ) {\n            // Inside drop zone\n            this.dragObj.setScale(1);\n\n            //console.log(this.lastAngle);\n\n            // if (\n            //     (this.x !== this.lastPos.x && this.y !== this.lastPos.y) ||\n            //     this.angle !== this.lastAngle\n            // ) {\n            this.repositionToClosest('x');\n            this.repositionToClosest('y');\n            // }\n\n            // this.lastPos = {\n            //     x: this.x,\n            //     y: this.y,\n            // };\n            // this.lastAngle = this.angle;\n\n            this.setPlaneCells();\n\n            this.isInDropZone = true;\n\n            //this.dragObj.x =\n        } else {\n            // Outside drop zone / Go back to initial position\n            this.goToInitialPosition();\n\n            this.isInDropZone = false;\n        }\n    }\n\n    goToInitialPosition() {\n        this.scene.tweens.add({\n            targets: [this.dragObj],\n            x: this.dragObj.getData('initialPos').x,\n            y: this.dragObj.getData('initialPos').y,\n            scaleX: 0.4,\n            scaleY: 0.4,\n            duration: 500,\n        });\n\n        // console.log(this.scene.planes);\n        delete this.scene.planes[this.planeName];\n        // console.log(this.scene.planes);\n    }\n\n    repositionToClosest(axis) {\n        let isVertical = this.angle === 90 || this.angle === -90;\n\n        if (isVertical) {\n            this.repositionVertical(axis);\n        } else {\n            this.repositionHorizontal(axis);\n        }\n\n        // console.log(isVertical);\n    }\n\n    repositionHorizontal(axis) {\n        let dropZone = this.getDropZone();\n\n        for (let i = 0; i < 8; i++) {\n            if (i < 2) continue;\n\n            let closest = i * 40;\n            let relativeDistance = this.dragObj[axis] - dropZone[axis];\n\n            if (axis === 'y') {\n                relativeDistance = relativeDistance + 20;\n            }\n\n            if (relativeDistance - closest < 39) {\n                // Horizontal plane\n                let newPos = closest + dropZone[axis] + (axis === 'x' ? 20 : 0);\n\n                if (i > 5) {\n                    // this.dragObj[axis] =\n                    //     5 * 40 + dropZone[axis] + (axis === 'x' ? 20 : 0);\n                    if (axis === 'x') {\n                        this.dragObj.x = 5 * 40 + dropZone.x + 20;\n                    } else {\n                        this.dragObj.y = 5 * 40 + dropZone.x;\n                    }\n                } else {\n                    this.dragObj[axis] = newPos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    repositionVertical(axis) {\n        let dropZone = this.getDropZone();\n\n        for (let i = 0; i < 9; i++) {\n            if (i < 2) continue;\n\n            let closest = i * 40;\n            let relativeDistance = this.dragObj[axis] - dropZone[axis];\n\n            if (axis === 'x') {\n                relativeDistance = relativeDistance + 20;\n            }\n\n            if (relativeDistance - closest < 39) {\n                // Horizontal plane\n                let newPos = closest + dropZone[axis] + (axis === 'y' ? 20 : 0);\n\n                if (i > 5) {\n                    // this.dragObj[axis] =\n                    //     5 * 40 + dropZone[axis] + (axis === 'x' ? 20 : 0);\n                    if (axis === 'x') {\n                        this.dragObj.x = 6 * 40 + dropZone.x;\n                        //console.log('aici 1');\n                    } else {\n                        this.dragObj.y = 5 * 40 + dropZone.x - 20;\n                        ///console.log('aici 2');\n                    }\n                } else {\n                    this.dragObj[axis] = newPos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    getDropZone() {\n        let { x, y, width, height } = this.scene.dropZoneRect;\n        return { x, y, width, height };\n    }\n\n    setPlaneCells() {\n        let headCellId;\n        let planeData = this.getPlanePositionData();\n        let headPoint = planeData.headPoint;\n\n        //console.log(planeData);\n\n        this.scene.cells.forEach((cell) => {\n            if (\n                cell.rect.centerX === headPoint.x &&\n                cell.rect.centerY === headPoint.y\n            ) {\n                headCellId = cell.id;\n            }\n        });\n\n        //console.log(headCellId);\n\n        let headCords = headCellId.split('').map((num) => parseInt(num));\n        headCords = { x: headCords[0], y: headCords[1] };\n\n        // let planeCells = [\n        //     headCellId,\n        //     // `${headCords.y + 1}${headCords.x - 2}`,\n        //     // `${headCords.y + 1}${headCords.x - 1}`,\n        //     // `${headCords.x}${headCords.y + 1}`,\n        //     // `${headCords.x + 1}${headCords.y + 1}`,\n        //     // `${headCords.x + 2}${headCords.y + 1}`,\n        //     // `${headCords.x}${headCords.y + 2}`,\n        //     // `${headCords.y + 3}${headCords.x - 1}`,\n        //     // `${headCords.x}${headCords.y + 3}`,\n        //     // `${headCords.x + 1}${headCords.y + 3}`,\n        // ];\n        let planeCells = [];\n\n        let schema = planeData.schema;\n\n        let originX = headCords.x + planeData.diff.x;\n        let originY = headCords.y + planeData.diff.y;\n\n        for (let i = 0; i < schema.length; i++) {\n            const line = schema[i];\n            //console.log('line', i);\n\n            for (let j = 0; j < line.length; j++) {\n                const cellPlaceholder = line[j];\n\n                if (cellPlaceholder) {\n                    planeCells.push(`${originX + j}${originY + i}`);\n                }\n\n                //console.log(`${i + 1}${j + 1}`);\n            }\n        }\n\n        //console.log(planeCells);\n        this.planeCells = planeCells;\n\n        if (this.scene.planes[this.planeName]) {\n            this.scene.planes[this.planeName].cells = planeCells;\n        }\n\n        // Push current plane to planes object\n\n        const currPlaneExists = Object.keys(this.scene.planes).includes(\n            this.planeName\n        );\n\n        if (!currPlaneExists) {\n            this.scene.planes[this.planeName] = {\n                cells: planeCells,\n                instance: this,\n            };\n        }\n\n        // let existingCurrentPlane = this.scene.planes.find((plane) => {\n        //     return plane.name === this.planeName;\n        // });\n\n        // if (!existingCurrentPlane) {\n        //     this.scene.planes.push({\n        //         name: this.planeName,\n        //         cells: planeCells,\n        //         instance: this,\n        //     });\n        // }\n\n        // Check for overlap\n        let isOverlapping = this.checkOverlap();\n        console.log(isOverlapping);\n        if (!isOverlapping) {\n            this.stablePos.push({\n                x: this.x,\n                y: this.y,\n            });\n\n            if (this.stablePos.length > 1) {\n                this.stablePos.shift();\n            }\n        }\n\n        //localStorage.setItem('lastPlaceCells', planeCells.join(','));\n    }\n\n    checkOverlap() {\n        let keys = Object.keys(this.scene.planes);\n        if (keys.length < 2) return false;\n\n        let firstPlaneCells = this.scene.planes[keys[0]].cells;\n        // console.log(firstPlaneCells);\n        let overlap = false;\n\n        for (let i = 0; i < this.planeCells.length; i++) {\n            if (firstPlaneCells.includes(this.planeCells[i])) {\n                //console.log('overlap');\n\n                // Reposition plane back to last stable positio\n                if (\n                    this.stablePos[0].x === this.getData('initialPos').x &&\n                    this.stablePos[0].y === this.getData('initialPos').y\n                ) {\n                    this.goToInitialPosition();\n\n                    //console.log('overl init');\n                } else {\n                    this.x = this.stablePos[0].x;\n                    this.y = this.stablePos[0].y;\n                    // console.log('overl afetr');\n                }\n\n                console.log(this.planeCells[i]);\n\n                overlap = true;\n                break;\n            }\n        }\n\n        return overlap;\n    }\n\n    getPlanePositionData() {\n        let schema;\n        let headPoint;\n        let diff; // Compute start point difference\n        // It is distance in cells from plane head\n        // to plane margin (top/left 0)\n\n        switch (this.angle) {\n            case 90:\n                headPoint = {\n                    x: this.x + this.height / 2 - this.scene.cellSize / 2,\n                    y: this.y,\n                };\n                schema = [\n                    [0, 0, 1, 0],\n                    [1, 0, 1, 0],\n                    [1, 1, 1, 1],\n                    [1, 0, 1, 0],\n                    [0, 0, 1, 0],\n                ];\n                diff = {\n                    x: -3,\n                    y: -2,\n                };\n                break;\n            case -180:\n                headPoint = {\n                    x: this.x,\n                    y: this.y + this.height / 2 - this.scene.cellSize / 2,\n                };\n                schema = [\n                    [0, 1, 1, 1, 0],\n                    [0, 0, 1, 0, 0],\n                    [1, 1, 1, 1, 1],\n                    [0, 0, 1, 0, 0],\n                ];\n                diff = {\n                    x: -2,\n                    y: -3,\n                };\n                break;\n            case -90:\n                headPoint = {\n                    x: this.x - this.height / 2 + this.scene.cellSize / 2,\n                    y: this.y,\n                };\n                schema = [\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 1],\n                    [1, 1, 1, 1],\n                    [0, 1, 0, 1],\n                    [0, 1, 0, 0],\n                ];\n                diff = {\n                    x: 0,\n                    y: -2,\n                };\n                break;\n\n            default:\n                headPoint = {\n                    x: this.x,\n                    y: this.y - this.height / 2 + this.scene.cellSize / 2,\n                };\n                schema = [\n                    [0, 0, 1, 0, 0],\n                    [1, 1, 1, 1, 1],\n                    [0, 0, 1, 0, 0],\n                    [0, 1, 1, 1, 0],\n                ];\n                diff = {\n                    x: -2,\n                    y: 0,\n                };\n        }\n\n        return { schema, headPoint, diff };\n    }\n\n    checkDoubleTap() {\n        if (typeof this.dragObj === 'undefined') return;\n\n        if (this.firstClickTime == 0) {\n            this.firstClickTime = this.getTime();\n            return;\n        }\n\n        let elapsed = this.getTime() - this.firstClickTime;\n\n        if (elapsed < 400) {\n            // Rotate plane on double tap\n\n            this.angle += 90;\n            // this.repositionToClosest('x');\n            // this.repositionToClosest('y');\n        }\n\n        this.firstClickTime = 0;\n    }\n\n    getTime() {\n        //make a new date object\n        let d = new Date();\n        //return the number of milliseconds since 1 January 1970 00:00:00.\n        return d.getTime();\n    }\n}\n\nexport default Plane;\n","class Players {\n    constructor(scene) {\n        this.scene = scene;\n        this.player = game.gameData.players.player;\n        this.opponent = game.gameData.players.opponent;\n\n        this.printBackground();\n        this.printPlayer();\n        this.loadOpponent();\n    }\n\n    printBackground() {\n        const rect = new Phaser.Geom.Rectangle(0, 0, game.config.width, 70);\n        const graphics = this.scene.add.graphics();\n        graphics.fillStyle(0x000000, 0.6);\n        graphics.fillRectShape(rect);\n    }\n\n    loadOpponent() {\n        if (this.scene.textures.exists(`opponent-${this.opponent.id}`)) {\n            this.printOpponent();\n            return;\n        }\n\n        this.scene.load.image(\n            `opponent-${this.opponent.id}`,\n            this.opponent.photo\n        );\n        this.scene.load.on('complete', this.printOpponent, this);\n        this.scene.load.start();\n    }\n\n    printPlayer() {\n        this.printPlayerPhoto('player', 30, 10);\n        this.printPlayerName(this.player.name, 90, 50, 0);\n    }\n\n    printOpponent() {\n        this.printPlayerPhoto(\n            `opponent-${this.opponent.id}`,\n            game.config.width - 80,\n            10\n        );\n        this.printPlayerName(this.opponent.name, game.config.width - 90, 50);\n    }\n\n    printPlayerPhoto(key, x, y) {\n        const width = 50;\n        const height = width;\n\n        // Create mask\n        const shape = this.scene.add.graphics();\n        shape.fillStyle(0x000000, 1);\n        shape.fillRoundedRect(x, y, width, height, 6);\n        const mask = shape.createGeometryMask();\n\n        // Add player image\n        const img = this.scene.add\n            .image(x, y, key)\n            .setDepth(4)\n            .setMask(mask)\n            .setOrigin(0);\n\n        img.displayWidth = width;\n        img.displayHeight = height;\n    }\n\n    printPlayerName(name, x, y, originX = 1) {\n        this.scene.add\n            .text(x, y, name, {\n                color: '#fff',\n                fontFamily: 'Righteous',\n                stroke: 'rgba(0,0,0,.6)',\n                strokeThickness: 1,\n                fontSize: '20px',\n            })\n            .setOrigin(originX, 0.5)\n            .setDepth(4);\n    }\n}\n\nexport default Players;\n","class Turn {\n    constructor() {\n        this.text = null;\n        this.isMyTurn = false; // used in Mainscene to allow/disallow clicking on cells\n    }\n\n    setScene(scene) {\n        this.scene = scene;\n        this.printTurnText();\n        this.updateTurnText();\n    }\n\n    setIsMyTurn(bool) {\n        this.isMyTurn = bool;\n    }\n\n    reverse() {\n        this.isMyTurn = !this.isMyTurn;\n        this.updateTurnText();\n    }\n\n    getTurnText() {\n        return this.isMyTurn ? 'Your turn' : 'Opponent turn. Please wait..';\n    }\n\n    printTurnText() {\n        this.text = this.scene.add\n            .text(game.config.width / 2, 36, this.getTurnText(), {\n                color: '#fff',\n                fontFamily: 'Righteous',\n                stroke: 'rgba(0,0,0,.6)',\n                strokeThickness: 1,\n                fontSize: '16px',\n            })\n            .setOrigin(0.5)\n            .setDepth(4);\n    }\n\n    updateTurnText() {\n        setTimeout(() => {\n            const color = this.isMyTurn ? '#0a9c00' : '#f79e0f';\n            this.text.setText(this.getTurnText()).setColor(color);\n\n            const tween = this.scene.tweens.add({\n                targets: [this.text],\n                scaleX: 1.5,\n                scaleY: 1.5,\n                duration: 400,\n                yoyo: true,\n                onComplete: () => {\n                    this.text.setColor('#fff');\n                },\n            });\n        }, 400);\n    }\n\n    scaleText() {\n        this.text.setText(this.getTurnText()).setColor('#f79e0f');\n        const tween = this.scene.tweens.add({\n            targets: [this.text],\n            scaleX: 1.5,\n            scaleY: 1.5,\n            duration: 400,\n            yoyo: true,\n            onComplete: () => {\n                this.text.setColor('#fff');\n            },\n        });\n    }\n}\n\nexport default Turn;\n","import Phaser from 'phaser';\n// import moment, { lang } from 'moment';\nimport Swal from 'sweetalert2';\n\n// window.moment = moment;\nwindow.Swal = Swal;\n\nwindow.jQuery = window.$ = require('jquery');\n// window.axios = require('axios');\n// window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\nimport LoadScene from './scenes/LoadScene';\nimport MainScene from './scenes/MainScene';\nimport StartScene from './scenes/StartScene';\nimport SetPlaneScene from './scenes/SetPlaneScene';\nimport SetOpponentScene from './scenes/SetOpponentScene';\n\nlet config = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 458,\n    parent: 'game',\n    title: 'The Airplanes with Friends',\n    version: '0.1.0',\n    url: '',\n};\n\nlet game = new Phaser.Game(config);\ngame.scene.add('LoadScene', new LoadScene());\ngame.scene.add('MainScene', new MainScene());\ngame.scene.add('StartScene', new StartScene());\ngame.scene.add('SetPlaneScene', new SetPlaneScene());\ngame.scene.add('SetOpponentScene', new SetOpponentScene());\ngame.scene.start('LoadScene');\nwindow.game = game;\n","import GameData from '../GameData';\n\nclass LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'LoadScene',\n        });\n    }\n\n    init() {\n        game.gameData = new GameData();\n    }\n\n    preload() {\n        /**\n         * LoadScene images\n         */\n\n        // this.load.multiatlas(\n        //     'atlas',\n        //     'assets/sprites/tp/atlas.json',\n        //     'assets/sprites/tp'\n        // );\n\n        this.load.image('player', game.gameData.players.player.photo);\n\n        this.load.image('play-btn', 'assets/images/play-btn.png');\n        this.load.image('btn-start-game', 'assets/images/btn-start-game.png');\n\n        this.load.image('x', 'assets/images/x.png');\n        this.load.image('fire', 'assets/images/fire.png');\n\n        this.load.image('plane-1', 'assets/images/planes/plane-1.png');\n        this.load.image('plane-2', 'assets/images/planes/plane-2.png');\n\n        this.showPreloader();\n    }\n\n    showPreloader() {\n        let scene = this;\n\n        let fontStyle = {\n            fontFamily: 'Play',\n            fontSize: 28,\n            color: '#ffffff',\n            stroke: '#fff',\n            strokeThickness: 2,\n            shadow: {\n                offsetX: 1,\n                offsetY: 1,\n                color: '#000',\n                blur: 0,\n                stroke: true,\n                fill: true,\n            },\n        };\n\n        let progressBar = scene.add.graphics();\n        let progressBox = scene.add.graphics();\n        progressBox.fillStyle(0x222222, 0.05);\n        progressBox.fillRect(\n            (game.config.width - 250) / 2,\n            game.config.height / 2 + 40,\n            250,\n            50\n        );\n\n        let width = scene.cameras.main.width;\n        let height = scene.cameras.main.height;\n        let loadingText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 50,\n            text: 'Loading...',\n            style: fontStyle,\n        });\n        loadingText.setOrigin(0.5, 0.5);\n\n        let percentText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 5,\n            text: '0%',\n            style: fontStyle,\n        });\n        percentText.setOrigin(0.5, 0.5);\n\n        scene.load.on('progress', function(value) {\n            percentText.setText(parseInt(value * 100) + '%');\n            progressBar.clear();\n            progressBar.fillStyle(0xbf4689, 1);\n            progressBar.fillRect(\n                (game.config.width - 250) / 2 + 5,\n                game.config.height / 2 + 50,\n                240 * value,\n                30\n            );\n        });\n\n        scene.load.on('complete', function() {\n            // console.log('preload done')\n\n            progressBar.destroy();\n            progressBox.destroy();\n            loadingText.destroy();\n            percentText.destroy();\n\n            //game.scene.start('Start');\n\n            game.scene.start('SetPlaneScene');\n        });\n    }\n}\n\nexport default LoadScene;\n","// import Socket from '../Socket';\nimport Players from '../components/Players';\n\nclass MainScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'MainScene',\n        });\n\n        this.cells = {};\n        this.opponentData = {}; // it is set on Socket class when msg is received from opponent\n    }\n\n    init(data) {\n        this.myPlanesCells = data.planesData.cells;\n        this.myPlanes = data.planesData.planes;\n        //console.log(this.myPlanesCells);\n        // console.log('heads', this.myPlanesCells[0], this.myPlanesCells[10]);\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    //debug\n    // drawByCells(cells) {\n    //     //console.log(this.cells);\n\n    //     cells.forEach((cl) => {\n    //         //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //         var graphics = this.add.graphics({\n    //             lineStyle: { width: 3, color: 0x000000 },\n    //         });\n    //         graphics.strokeRectShape(this.cells[`o${cl}`].rect);\n    //     });\n    // }\n\n    create() {\n        console.log('main create');\n\n        this.drawSceneBackground();\n\n        this.playersComponent = new Players(this);\n        //this.game.scene.getScene('SetPlaneScene').players.opponent\n\n        this.socket.send({\n            action: 'setOpponentData',\n            opponentData: {\n                planesCells: this.myPlanesCells,\n            },\n        });\n\n        this.drawPlayerMap(40, 80);\n        this.drawPlayerMap(440, 80, 'opponent');\n\n        this.drawPlanes();\n\n        this.turn = game.gameData.turn;\n        this.turn.setScene(this);\n\n        //console.log(this.turn);\n\n        //debug\n        //window.Socket = Socket;\n        window.MainScene = this;\n        // this.drawByCells(this.myPlanesCells);\n    }\n\n    drawPlanes() {\n        // console.log(this.myPlanes);\n        Object.keys(this.myPlanes).forEach((planeKey) => {\n            const playerMapLeftDiff = 2 * 40; // Difference between left margin of maps                                               // on SetPlaneScene and MainScene\n            const plane = this.myPlanes[planeKey].instance;\n            const planeImage = this.add\n                .image(plane.x - playerMapLeftDiff, plane.y, plane.texture.key)\n                .setAngle(plane.angle);\n        });\n    }\n\n    drawPlayerMap(x, y, type = null) {\n        const sqareWidth = 40;\n        const cellsNum = 8;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawRect(\n                    x + j * sqareWidth,\n                    y + i * sqareWidth,\n                    sqareWidth,\n                    i,\n                    j,\n                    type\n                );\n            }\n        }\n    }\n\n    drawRect(x, y, sqareWidth, i, j, type) {\n        let rect = new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        var graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0x0000aa },\n        });\n        graphics.strokeRectShape(rect);\n\n        graphics.setInteractive(\n            new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth),\n            Phaser.Geom.Rectangle.Contains\n        );\n\n        const owner = type === 'opponent' ? 'p' : 'o';\n\n        const id = `${owner}${j + 1}${i + 1}`;\n        this.cells[id] = { graphics, rect };\n        // graphics.setData('id', id);\n        graphics.on('pointerdown', () => {\n            if (type !== 'opponent') return;\n\n            if ($.isEmptyObject(this.opponentData)) {\n                console.log('opponent not ready yet');\n                return;\n            }\n\n            if (!this.turn.isMyTurn) {\n                console.log('not my turn');\n                game.gameData.turn.scaleText();\n                return;\n            }\n\n            this.socket.send({\n                action: 'attack',\n                cellClicked: id,\n            });\n\n            if (this.opponentData.planesCells.includes(`${j + 1}${i + 1}`)) {\n                // Targeted point\n                graphics = this.add.graphics({\n                    fillStyle: { color: 0x000000 },\n                });\n                graphics.fillRectShape(rect);\n            } else {\n                // Missed point\n                this.add.image(rect.centerX, rect.centerY, 'x').setScale(0.8);\n            }\n\n            game.gameData.turn.reverse();\n        });\n    }\n\n    drawSceneBackground() {\n        const x = 0;\n        const y = 0;\n        const sqareWidth = 40;\n        const cellsNum = 20;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawBgRect(\n                    x + j * sqareWidth,\n                    y + i * sqareWidth,\n                    sqareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n    }\n\n    drawBgRect(x, y, sqareWidth, i, j) {\n        let rect = new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        var graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0xeeeeee },\n        });\n        graphics.strokeRectShape(rect);\n    }\n}\n\nexport default MainScene;\n","class SetOpponentScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'SetOpponentScene',\n        });\n    }\n\n    init(data) {\n        this.myRoom = null;\n        this.setPlaneScene = data.setPlaneScene;\n        this.events.on('shutdown', this.destroy, this);\n        this.randSceneId = Math.floor(Math.random() * 100000);\n    }\n\n    create() {\n        const html = `\n            <div class=\"flex items-center rounded animate__animated animate__backInDown\">\n                <div class=\"flex w-full\">\n                    <div class=\"col-create-room flex flex-1 justify-center items-center flex-col\">\n                        <p class=\"text-gray-800 mb-2\">Create a room</p>\n                        <button id=\"createRoom\" class=\"bg-pink-700 px-4 py-2 text-white rounded\">Create</button>\n                    </div> \n                    <div class=\"col-go-to-room flex flex-1 justify-center items-center flex-col\">\n                    <p class=\"text-gray-800 mb-2\">Go to a room</p>\n                        <input id=\"roomId\" class=\"mb-2\" value=\"0000\" type=\"text\" />\n                        <button id=\"goToRoom\" class=\"bg-blue-700 px-4 py-2 text-white rounded\">Go play</button>\n                    </div> \n                </div> \n            </div>\n        `;\n\n        const el = document.createElement('div');\n        el.innerHTML = html;\n        el.style.width = $('canvas').width() + 'px';\n        el.style.height = $('canvas').height() + 'px';\n        el.classList = `scene-html scene-html-${this.randSceneId} absolute t-0 l-0 flex justify-center items-center animate__animated animate__fadeIn`;\n        $('#game').append(el);\n\n        $('body').one('click', '#createRoom', this.getMyRoom.bind(this));\n        $('body').on('click', '#goToRoom', () => {\n            const roomToGo = $('#roomId').val();\n            const $sceneHtml = $(`.scene-html-${this.randSceneId}`);\n            if ($sceneHtml.find('.room-error').length > 0) return;\n\n            game.gameData.turn.setIsMyTurn(false);\n\n            //  console.log(roomToGo);\n            this.setPlaneScene.socket.send({\n                action: 'goToRoom',\n                room: roomToGo,\n            });\n        });\n    }\n\n    getMyRoom() {\n        this.setPlaneScene.socket.send({\n            action: 'getMyRoom',\n        });\n    }\n\n    // Called from Socket class on message received from server\n    showMyRoomId(id) {\n        this.myRoom = id;\n\n        const $sceneHtml = $(`.scene-html-${this.randSceneId}`);\n        const $colCreateRoom = $sceneHtml.find('.col-create-room');\n\n        $sceneHtml\n            .find('#createRoom')\n            .after(`<h4>${id}</h4>`)\n            .remove();\n\n        $colCreateRoom\n            .find('p')\n            .text('Your opponent can connect to this room code:');\n\n        $colCreateRoom.find('h4').after(`\n                <small class=\"text-green-600 mt-2\">Waiting for opponent to connect...<small>\n                <button class=\"go-back bg-blue-400 block mx-auto mt-4 px-4 py-2 text-white rounded\">Go back</button>\n            `);\n        $sceneHtml.find('.col-go-to-room').hide();\n\n        $('body').one('click', '.go-back', () => {\n            this.scene.restart();\n\n            // this.setPlaneScene.scene.launch('SetOpponentScene', {\n            //     setPlaneScene: this.setPlaneScene,\n            // });\n        });\n    }\n\n    // Called from Socket class\n    printInvalidRoom() {\n        const $sceneHtml = $(`.scene-html-${this.randSceneId}`);\n        $sceneHtml.find('.col-go-to-room').append(`\n            <div class=\"room-error hidden text-center mt-2\">\n                <p class=\"text-red-600\">Invalid room code..</p>\n                <p class=\"text-red-600 text-xs\">Try again with another code.</p>\n            </div>\n        `);\n\n        $sceneHtml.find('.room-error').fadeIn();\n\n        setTimeout(() => {\n            $sceneHtml.find('.room-error').fadeOut(400, function() {\n                $(this).remove();\n            });\n        }, 2000);\n    }\n\n    printOpponentConnected() {\n        Swal.fire({\n            title: \"Let's go!\",\n            text: 'Opponent connected',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n        }).then(() => {\n            console.log('execute then');\n            this.scene.stop();\n        });\n    }\n\n    startRoom(id) {\n        if (this.myRoom && this.myRoom == id) {\n            // This is the room initiator player\n            this.printOpponentConnected();\n        } else {\n            // This is the opponent\n            this.scene.stop();\n        }\n    }\n\n    destroy() {\n        const $sceneHtml = $(`.scene-html-${this.randSceneId}`);\n        $('body').off();\n        $sceneHtml.fadeOut(500, () => {\n            $sceneHtml.remove();\n            console.log('removed');\n        });\n    }\n}\n\nexport default SetOpponentScene;\n","import Players from '../components/Players';\nimport Plane from '../components/Plane';\nimport Socket from '../Socket';\n\nclass SetPlaneScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'SetPlaneScene',\n            physics: {\n                arcade: {\n                    //debug: true,\n                },\n            },\n        });\n\n        this.cellSize = 40;\n        this.cells = [];\n\n        this.planes = {};\n    }\n\n    init() {\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    create() {\n        this.drawSceneBackground();\n\n        // // Setup players\n        //this.players = new Players(this);\n\n        const x = 120;\n        const y = 80;\n\n        this.drawPlayerMap(x, y);\n\n        //this.plane = new Plane(this);\n        let plane1 = new Plane({\n            scene: this,\n            x: game.config.width / 2 + 200,\n            y: 140,\n            planeNum: 1,\n        });\n\n        let plane2 = new Plane({\n            scene: this,\n            x: game.config.width / 2 + 300,\n            y: 140,\n            planeNum: 2,\n        });\n\n        // Start game btn\n        this.addStartGame();\n\n        let mainScene = game.scene.getScene('MainScene');\n        // mainScene.players = new Players(mainScene);\n        this.socket = new Socket();\n        mainScene.socket = this.socket;\n\n        // Set opponent screen\n        // this.scene.stop();\n\n        //new Players(this);\n\n        this.scene\n            .launch('StartScene', {\n                setPlaneScene: this,\n            })\n            .bringToTop('StartScene');\n\n        //\n        //\n        ///\n        // this.scene.launch('SetOpponentScene', {\n        //     setPlaneScene: this,\n        // });\n\n        // setTimeout(() => {\n        //     this.scene.stop('SetOpponentScene');\n        //     this.scene.resume();\n        // }, 4000);\n\n        //debug\n        window.socket = this.socket;\n        window.SetPlaneScene = this;\n\n        // let cls = localStorage.getItem('lastPlaceCells').split(',');\n        // this.drawByCells(cls);\n    }\n\n    addStartGame() {\n        this.add\n            .image(630, 380, 'btn-start-game')\n            .setInteractive({ useHandCursor: true })\n            .on('pointerup', () => {\n                // let heads = [];\n                let allPlanesCells = [];\n\n                let keys = Object.keys(this.planes);\n                let keysLength = keys.length;\n\n                if (keysLength < 2) {\n                    // add 2 planes\n                    return;\n                }\n\n                for (let i = 0; i < keysLength; i++) {\n                    //heads.push(this.planes[keys[i]].cells[0]);\n                    allPlanesCells = [\n                        ...allPlanesCells,\n                        ...this.planes[keys[i]].cells,\n                    ];\n                }\n\n                //console.log(this.planes);\n\n                this.scene.stop();\n                this.scene.start('MainScene', {\n                    planesData: {\n                        cells: allPlanesCells,\n                        planes: this.planes,\n                    },\n                });\n            });\n    }\n\n    // debug\n    drawByCells(cells) {\n        cells.forEach((cl) => {\n            //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n            var graphics = this.add.graphics({\n                lineStyle: { width: 3, color: 0x000000 },\n            });\n            graphics.strokeRectShape(this.cells[cl].rect);\n        });\n    }\n\n    drawPlayerMap(x, y) {\n        const squareWidth = this.cellSize;\n        const cellsNum = 8;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawRect(\n                    x + j * squareWidth,\n                    y + i * squareWidth,\n                    squareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n\n        this.drawBorder(x, y, squareWidth, cellsNum);\n    }\n\n    drawBorder(x, y, squareWidth, cellsNum) {\n        let width = squareWidth * cellsNum;\n        let rect = new Phaser.Geom.Rectangle(x, y, width, width);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        let graphics = this.add.graphics({\n            lineStyle: { width: 3, color: 0x000000 },\n        });\n        graphics.strokeRectShape(rect);\n\n        this.dropZoneRect = rect;\n    }\n\n    drawRect(x, y, squareWidth, i, j, type) {\n        let rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        let graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0x000000 },\n        });\n        graphics.strokeRectShape(rect);\n\n        const id = `${j + 1}${i + 1}`;\n\n        this.cells[id] = { id, rect };\n    }\n\n    drawSceneBackground() {\n        const x = 0;\n        const y = 0;\n        const squareWidth = this.cellSize;\n        const cellsNum = 20;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawBgRect(\n                    x + j * squareWidth,\n                    y + i * squareWidth,\n                    squareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n    }\n\n    drawBgRect(x, y, squareWidth, i, j) {\n        let rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        var graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0xeeeeee },\n        });\n        graphics.strokeRectShape(rect);\n    }\n}\n\nexport default SetPlaneScene;\n","class StartScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'StartScene',\n        });\n    }\n\n    init(data) {\n        this.setPlaneScene = data.setPlaneScene;\n    }\n\n    create() {\n        const rect = new Phaser.Geom.Rectangle(\n            0,\n            0,\n            game.config.width,\n            game.config.height\n        );\n        const graphics = this.add.graphics();\n        graphics.fillStyle(0x000000, 0.8);\n        graphics.fillRectShape(rect);\n\n        const playBtn = this.add\n            .image(game.config.width / 2, game.config.height / 2, 'play-btn')\n            .setScale(0.5)\n            .setAlpha(0.7)\n            .setInteractive({ useHandCursor: true })\n            .on('pointerdown', this.start, this);\n\n        this.tweens.add({\n            targets: [playBtn],\n            scaleX: 0.6,\n            scaleY: 0.6,\n            alpha: 1,\n            duration: 1000,\n            repeat: -1,\n            yoyo: true,\n            ease: 'Circ.easeIn',\n        });\n    }\n\n    start() {\n        this.scene.stop();\n        this.scene.launch('SetOpponentScene', {\n            setPlaneScene: this.setPlaneScene,\n        });\n    }\n}\n\nexport default StartScene;\n","// removed by extract-text-webpack-plugin"],"sourceRoot":""}