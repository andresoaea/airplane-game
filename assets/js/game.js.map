{"version":3,"sources":["webpack:///./src/js/Socket.js","webpack:///./src/js/components/Plane.js","webpack:///./src/js/components/Players.js","webpack:///./src/js/game.js","webpack:///./src/js/scenes/LoadScene.js","webpack:///./src/js/scenes/MainScene.js","webpack:///./src/js/scenes/SetPlaneScene.js","webpack:///./src/sass/game.scss?4097"],"names":["Socket","players","url","player","id","opponent","conn","WebSocket","onopen","e","console","log","msg","readyState","CLOSED","send","Plane","config","scene","x","y","add","existing","setScale","setInteractive","setData","input","on","startDrag","pointer","targets","off","dragObj","doDrag","stopDrag","initialPos","getData","game","width","dragX","dragY","dropZone","getDropZone","height","repositionToClosest","tweens","scaleX","scaleY","duration","axis","i","closest","actualDist","dropZoneRect","Phaser","GameObjects","Sprite","Players","getParameterByName","name","photo","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","axios","require","defaults","headers","common","type","AUTO","parent","title","version","Game","LoadScene","MainScene","SetPlaneScene","start","key","load","image","showPreloader","fontStyle","fontFamily","fontSize","color","stroke","strokeThickness","shadow","offsetX","offsetY","blur","fill","progressBar","graphics","progressBox","fillStyle","fillRect","cameras","main","loadingText","make","text","style","setOrigin","percentText","value","setText","parseInt","clear","destroy","Scene","physics","arcade","cells","setBackgroundColor","drawSceneBackground","socket","onmessage","data","JSON","parse","opponentDisconnected","restart","cellId","cellClicked","fillRectShape","rect","drawPlayerMap","sqareWidth","cellsNum","j","drawRect","Geom","Rectangle","lineStyle","strokeRectShape","Contains","owner","stringify","drawBgRect","plane","drawBorder"],"mappings":"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","file":"/js/game.js","sourcesContent":["class Socket {\n    constructor(players) {\n        const url = `ws://192.168.0.105:8080/comm?playerId=${players.player.id}&opponentId=${players.opponent.id}`;\n        const conn = new WebSocket(url);\n        conn.onopen = function(e) {\n            console.log(`Connection established to ${url}`);\n        };\n        // conn.onmessage = (e) => {\n        //     console.log(e.data);\n        // };\n        this.conn = conn;\n    }\n\n    send(msg) {\n        if (this.conn.readyState === WebSocket.CLOSED) return;\n        return this.conn.send(msg);\n    }\n}\n\nexport default Socket;\n","class Plane extends Phaser.GameObjects.Sprite {\n    constructor(config) {\n        super(config.scene, config.x, config.y, 'plane-1');\n        config.scene.add.existing(this);\n\n        this.scene = config.scene;\n\n        this.setScale(0.4)\n            .setInteractive()\n            .setData('initialPos', {\n                x: this.x,\n                y: this.y,\n            });\n\n        this.scene.input.on('pointerdown', this.startDrag, this);\n    }\n\n    startDrag(pointer, targets) {\n        this.scene.input.off('pointerdown', this.startDrag, this);\n        this.dragObj = targets[0];\n        this.scene.input.on('pointermove', this.doDrag, this);\n        this.scene.input.on('pointerup', this.stopDrag, this);\n    }\n\n    doDrag(pointer) {\n        if (typeof this.dragObj !== 'undefined') {\n            // Move\n            this.dragObj.x = pointer.x;\n            this.dragObj.y = pointer.y;\n\n            let initialPos = this.dragObj.getData('initialPos');\n\n            // Scale\n            if (pointer.x < initialPos.x) {\n                this.dragObj.setScale(\n                    (game.config.width - this.dragObj.x) / 450\n                );\n            }\n        }\n    }\n\n    stopDrag() {\n        this.scene.input.on('pointerdown', this.startDrag, this);\n        this.scene.input.off('pointermove', this.doDrag, this);\n        this.scene.input.off('pointerup', this.stopDrag, this);\n\n        if (typeof this.dragObj == 'undefined') return;\n\n        // Check if in drop zone\n        let dragX = this.dragObj.x;\n        let dragY = this.dragObj.y;\n\n        let dropZone = this.getDropZone();\n\n        if (\n            dragX > dropZone.x &&\n            dragX < dropZone.x + dropZone.width &&\n            dragY > dropZone.y &&\n            dragY < dropZone.y + dropZone.height\n        ) {\n            // Inside drop zone\n            this.dragObj.setScale(1);\n            // this.dragObj.x = dropZone.x + this.dragObj.width / 2;\n            // this.dragObj.y = dropZone.y + this.dragObj.height / 2;\n\n            // this.scene.cells.forEach((cell) => {\n            //     console.log(cell);\n            // });\n\n            this.repositionToClosest('x');\n            this.repositionToClosest('y');\n\n            //this.dragObj.x =\n        } else {\n            // Outside drop zone / Go back to initial position\n            this.scene.tweens.add({\n                targets: [this.dragObj],\n                x: this.dragObj.getData('initialPos').x,\n                y: this.dragObj.getData('initialPos').y,\n                scaleX: 0.4,\n                scaleY: 0.4,\n                duration: 500,\n            });\n        }\n    }\n\n    repositionToClosest(axis) {\n        let dropZone = this.getDropZone();\n\n        for (let i = 0; i < 8; i++) {\n            if (i < 2) continue;\n\n            let closest = i * 40;\n            let actualDist = this.dragObj[axis] - dropZone[axis];\n\n            if (actualDist - closest < 39) {\n                this.dragObj[axis] =\n                    closest + dropZone[axis] + (axis === 'x' ? 20 : 0);\n                break;\n            }\n        }\n    }\n\n    getDropZone() {\n        let { x, y, width, height } = this.scene.dropZoneRect;\n        return { x, y, width, height };\n    }\n}\n\nexport default Plane;\n","class Players {\n    constructor() {\n        this.player = {\n            id: this.getParameterByName('userId') ?? '1',\n            name: 'User',\n            photo: null,\n        };\n\n        this.opponent = {\n            id: this.getParameterByName('opponentId') ?? '2',\n            name: 'UserOpponent',\n            photo: null,\n        };\n    }\n\n    // helper for debugging\n    getParameterByName(name, url = window.location.href) {\n        name = name.replace(/[\\[\\]]/g, '\\\\$&');\n        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    }\n}\n\nexport default Players;\n","import Phaser from 'phaser';\n// import moment, { lang } from 'moment';\n// import Swal from 'sweetalert2';\n\n// window.moment = moment;\n// window.Swal = Swal;\n\n// //indow.jQuery = window.$ = require('jquery');\nwindow.axios = require('axios');\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\nimport LoadScene from './scenes/LoadScene';\nimport MainScene from './scenes/MainScene';\nimport SetPlaneScene from './scenes/SetPlaneScene';\n\nlet config = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 458,\n    parent: 'game',\n    // physics: {\n    //     default: 'arcade',\n    //     arcade: {\n    //         gravity: { y: 800 },\n    //         //debug: true\n    //     },\n    // },\n    title: 'The Airplanes with Friends',\n    url: '',\n    version: '1.0.0',\n};\n\nlet game = new Phaser.Game(config);\ngame.scene.add('LoadScene', new LoadScene());\ngame.scene.add('MainScene', new MainScene());\ngame.scene.add('SetPlaneScene', new SetPlaneScene());\ngame.scene.start('LoadScene');\nwindow.game = game;\n","class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'LoadScene',\n        });\n    }\n\n    preload() {\n        /**\n         * LoadScene images\n         */\n\n        // this.load.multiatlas(\n        //     'atlas',\n        //     'assets/sprites/tp/atlas.json',\n        //     'assets/sprites/tp'\n        // );\n\n        this.load.image('plane-1', 'assets/images/planes/plane-1.png');\n\n        this.showPreloader();\n    }\n\n    showPreloader() {\n        let scene = this;\n\n        let fontStyle = {\n            fontFamily: 'Play',\n            fontSize: 28,\n            color: '#ffffff',\n            stroke: '#fff',\n            strokeThickness: 2,\n            shadow: {\n                offsetX: 1,\n                offsetY: 1,\n                color: '#000',\n                blur: 0,\n                stroke: true,\n                fill: true,\n            },\n        };\n\n        let progressBar = scene.add.graphics();\n        let progressBox = scene.add.graphics();\n        progressBox.fillStyle(0x222222, 0.05);\n        progressBox.fillRect(\n            (game.config.width - 250) / 2,\n            game.config.height / 2 + 40,\n            250,\n            50\n        );\n\n        let width = scene.cameras.main.width;\n        let height = scene.cameras.main.height;\n        let loadingText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 50,\n            text: 'Loading...',\n            style: fontStyle,\n        });\n        loadingText.setOrigin(0.5, 0.5);\n\n        let percentText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 5,\n            text: '0%',\n            style: fontStyle,\n        });\n        percentText.setOrigin(0.5, 0.5);\n\n        scene.load.on('progress', function(value) {\n            percentText.setText(parseInt(value * 100) + '%');\n            progressBar.clear();\n            progressBar.fillStyle(0xbf4689, 1);\n            progressBar.fillRect(\n                (game.config.width - 250) / 2 + 5,\n                game.config.height / 2 + 50,\n                240 * value,\n                30\n            );\n        });\n\n        scene.load.on('complete', function() {\n            // console.log('preload done')\n\n            progressBar.destroy();\n            progressBox.destroy();\n            loadingText.destroy();\n            percentText.destroy();\n\n            //game.scene.start('Start');\n\n            game.scene.start('SetPlaneScene');\n        });\n    }\n}\n\nexport default LoadScene;\n","import Socket from '../Socket';\nimport Players from '../components/Players';\n\nclass MainScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'MainScene',\n            physics: {\n                arcade: {\n                    //debug: true,\n                },\n            },\n        });\n\n        this.cells = {};\n    }\n\n    init() {\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    create() {\n        this.drawSceneBackground();\n\n        // Setup players\n        this.players = new Players();\n\n        this.socket = new Socket(this.players);\n\n        this.socket.conn.onmessage = (e) => {\n            console.log(e.data);\n            const msg = JSON.parse(e.data);\n\n            if (msg.opponentDisconnected) {\n                console.log('opponent disconnected');\n                this.scene.restart();\n            }\n\n            const cellId = msg.cellClicked;\n            if (!cellId) return;\n\n            const graphics = this.add.graphics({\n                fillStyle: { color: 0x0000ff },\n            });\n\n            graphics.fillRectShape(this.cells[cellId.replace('p', 'o')].rect);\n        };\n\n        const x = 40;\n        const y = 80;\n\n        this.drawPlayerMap(x, y);\n        this.drawPlayerMap(440, y, 'opponent');\n\n        //debug\n        window.Socket = Socket;\n        window.MainScene = this;\n    }\n\n    drawPlayerMap(x, y, type = null) {\n        const sqareWidth = 40;\n        const cellsNum = 8;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawRect(\n                    x + j * sqareWidth,\n                    y + i * sqareWidth,\n                    sqareWidth,\n                    i,\n                    j,\n                    type\n                );\n            }\n        }\n    }\n\n    drawRect(x, y, sqareWidth, i, j, type) {\n        let rect = new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        var graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0x0000aa },\n        });\n        graphics.strokeRectShape(rect);\n\n        graphics.setInteractive(\n            new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth),\n            Phaser.Geom.Rectangle.Contains\n        );\n\n        const owner = type === 'opponent' ? 'p' : 'o';\n\n        const id = `${owner}${j + 1}${i + 1}`;\n        this.cells[id] = { graphics, rect };\n        // graphics.setData('id', id);\n        graphics.on('pointerdown', () => {\n            if (type !== 'opponent') return;\n\n            this.socket.send(\n                JSON.stringify({\n                    cellClicked: id,\n                })\n            );\n\n            // console.log(graphics.getData('id'));\n            graphics = this.add.graphics({\n                fillStyle: { color: 0x0000ff },\n            });\n\n            graphics.fillRectShape(rect);\n        });\n    }\n\n    drawSceneBackground() {\n        const x = 0;\n        const y = 0;\n        const sqareWidth = 40;\n        const cellsNum = 20;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawBgRect(\n                    x + j * sqareWidth,\n                    y + i * sqareWidth,\n                    sqareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n    }\n\n    drawBgRect(x, y, sqareWidth, i, j) {\n        let rect = new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        var graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0xeeeeee },\n        });\n        graphics.strokeRectShape(rect);\n    }\n}\n\nexport default MainScene;\n","import Players from '../components/Players';\nimport Plane from '../components/Plane';\n\nclass SetPlaneScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'SetPlaneScene',\n            physics: {\n                arcade: {\n                    //debug: true,\n                },\n            },\n        });\n\n        this.cells = [];\n    }\n\n    init() {\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    create() {\n        this.drawSceneBackground();\n\n        // Setup players\n        this.players = new Players();\n\n        // this.socket = new Socket(this.players);\n\n        const x = 120;\n        const y = 80;\n\n        this.drawPlayerMap(x, y);\n\n        //this.plane = new Plane(this);\n        let plane = new Plane({\n            scene: this,\n            x: game.config.width / 2 + 200,\n            y: 140,\n        });\n\n        //debug\n        // window.Socket = Socket;\n        window.SetPlaneScene = this;\n    }\n\n    drawPlayerMap(x, y) {\n        const sqareWidth = 40;\n        const cellsNum = 8;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawRect(\n                    x + j * sqareWidth,\n                    y + i * sqareWidth,\n                    sqareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n\n        this.drawBorder(x, y, sqareWidth, cellsNum);\n    }\n\n    drawBorder(x, y, sqareWidth, cellsNum) {\n        let width = sqareWidth * cellsNum;\n        let rect = new Phaser.Geom.Rectangle(x, y, width, width);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        let graphics = this.add.graphics({\n            lineStyle: { width: 3, color: 0x000000 },\n        });\n        graphics.strokeRectShape(rect);\n\n        this.dropZoneRect = rect;\n    }\n\n    drawRect(x, y, sqareWidth, i, j, type) {\n        let rect = new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        let graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0x000000 },\n        });\n        graphics.strokeRectShape(rect);\n\n        const id = `${j + 1}${i + 1}`;\n        this.cells[id] = { graphics, rect };\n    }\n\n    drawSceneBackground() {\n        const x = 0;\n        const y = 0;\n        const sqareWidth = 40;\n        const cellsNum = 20;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawBgRect(\n                    x + j * sqareWidth,\n                    y + i * sqareWidth,\n                    sqareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n    }\n\n    drawBgRect(x, y, sqareWidth, i, j) {\n        let rect = new Phaser.Geom.Rectangle(x, y, sqareWidth, sqareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        var graphics = this.add.graphics({\n            lineStyle: { width: 1, color: 0xeeeeee },\n        });\n        graphics.strokeRectShape(rect);\n    }\n}\n\nexport default SetPlaneScene;\n","// removed by extract-text-webpack-plugin"],"sourceRoot":""}