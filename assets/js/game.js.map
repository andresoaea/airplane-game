{"version":3,"sources":["webpack:///src/js/vue-components/SetOpponent.vue","webpack:///./src/js/vue-components/SetOpponent.vue?98c6","webpack:///./src/js/vue-components/SetOpponent.vue?a3fc","webpack:///./src/js/GameData.js","webpack:///./src/js/Socket.js","webpack:///./src/js/components/Background.js","webpack:///./src/js/components/Explode.js","webpack:///./src/js/components/Map.js","webpack:///./src/js/components/Plane.js","webpack:///./src/js/components/Players.js","webpack:///./src/js/components/Turn.js","webpack:///./src/js/game.js","webpack:///./src/js/helpers.js","webpack:///./src/js/scenes/LoadScene.js","webpack:///./src/js/scenes/MainScene.js","webpack:///./src/js/scenes/SetPlaneScene.js","webpack:///./src/js/scenes/StartScene.js","webpack:///./src/js/vue-components/SetOpponent.vue","webpack:///./src/js/vue-components/SetOpponent.vue?a078","webpack:///./src/js/vue-components/SetOpponent.vue?35b5","webpack:///./src/js/vue-components/SetOpponent.vue?2fd9","webpack:///./src/sass/game.scss?4097"],"names":["GameData","imageNum","getId","players","player","id","name","photo","turn","Turn","opponent","setPlaneScene","game","scene","getScene","playersComponent","Players","getParameterByName","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","Socket","queryString","$","param","gameData","conn","WebSocket","onopen","e","console","log","onmessage","msg","JSON","parse","data","handleReceivedMessage","onerror","Swal","fire","title","text","icon","showConfirmButton","action","bus","$emit","room","setIsMyTurn","setOpponent","doOpponentDisconnected","doAttack","reverse","doSetOpponentData","opponentData","cellId","cellClicked","isHit","cellNum","rect","cells","printAttackedText","Object","keys","myPlanes","forEach","planeKey","currPlane","instance","planeCells","includes","headHitted","headCell","texture","add","image","centerX","centerY","setScale","zoom","fireGameObjects","push","splice","indexOf","length","destroyPlane","start","readyState","CLOSED","send","stringify","Background","draw","x","y","squareWidth","opts","cellSize","cellsNum","i","j","drawSingleRect","Phaser","Geom","Rectangle","graphics","lineStyle","width","color","strokeRectShape","Explode","create","rt","make","renderTexture","height","setOrigin","blast","follower","setAlpha","setDepth","nuke","tweens","targets","scaleX","scaleY","alpha","duration","ease","onStart","onComplete","clear","paused","setCallback","bind","play","points","curve","Curves","Spline","setPath","startFollow","crot","Math","cos","rotation","random","srot","sin","rand","sx","sy","setTexture","currentMatrix","frame","Map","type","isMainScene","attackedCells","drawMap","drawRect","drawBorder","letters","letter","toUpperCase","drawText","dropZoneRect","setInteractive","Contains","owner","on","isEmptyObject","isMyTurn","scaleText","socket","opponentPlanes","planes","gph","fillStyle","fillRectShape","head","revealHittedPlane","fontSize","fontFamily","planeData","cell","setTimeout","Plane","config","planeNum","existing","setData","input","setDraggable","dragStart","dragEnd","drag","planeName","stablePos","isInDropZone","firstClickTime","pointer","gameObject","moveToFront","dragX","dragY","scaleOnDrag","checkDoubleTap","checkIfInDropZone","dropZone","getDropZone","repositionToClosest","setPlaneCells","goToInitialPosition","axis","isVertical","angle","repositionVertical","repositionHorizontal","closest","relativeDistance","newPos","getData","setScaleNoZoom","objects","planesGameObjects","planeGameObject","headCellId","getPlanePositionData","headPoint","headCords","split","map","num","parseInt","schema","originX","diff","originY","line","cellPlaceholder","currPlaneExists","isOverlapping","checkOverlap","shift","otherPlaneCells","overlap","lastClickTime","time","now","clickDelay","scale","GameObjects","Sprite","printBackground","printPlayer","loadOpponent","textures","exists","printOpponent","load","printPlayerPhoto","printPlayerName","defaultWidth","key","shape","fillRoundedRect","mask","createGeometryMask","img","setMask","displayWidth","displayHeight","stroke","strokeThickness","printTurnText","updateTurnText","bool","getTurnText","point","getLetterPoint","setText","setColor","tween","yoyo","splitted","require","Helpers","getDevicePixelRatio","AUTO","parent","version","Game","defaultHeight","Vue","LoadScene","MainScene","StartScene","SetPlaneScene","render","h","SetOpponent","$mount","mediaQuery","is_firefox","navigator","userAgent","toLowerCase","devicePixelRatio","undefined","matchMedia","matches","cameras","main","setBackgroundColor","showPreloader","bg","fontStyle","shadow","offsetX","offsetY","blur","fill","progressBar","progressBox","fillRect","loadingText","style","percentText","value","destroy","stop","Scene","planesData","explode","background","playerMap","opponentMap","dataToSend","drawPlanes","setScene","printTerritoryText","playerMapLeftDiff","plane","planeImage","setAngle","gameWidth","x1","x2","printText","fires","generate","physics","arcade","plane1","plane2","addStartGame","mainScene","launch","bringToTop","useHandCursor","keysLength","cl","playBtn","repeat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA,sBADA;AAEA,MAFA,kBAEA;AACA;AACA,iBADA;AAEA,wBAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA;AAIA,sBAJA;AAKA;AALA;AAOA,GAVA;AAWA,SAXA,qBAWA;AAAA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA,KAJA;AAMA;AACA;AACA;AACA,KAHA;AAKA;AACA;AACA;AACA;AACA,OAFA,EAEA,IAFA;AAGA,KALA;AAOA,iBACA,2BADA,EAEA,6BAFA;AAKA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,KARA;AASA,GA5CA;AA6CA;AACA,cADA,wBACA;AACA;AACA;AADA;AAGA,KALA;AAMA,YANA,sBAMA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BADA;AAEA;AAFA;AAIA,KAnBA;AAoBA,eApBA,uBAoBA,GApBA,EAoBA;AACA;AACA;AACA,KAvBA;AAwBA,eAxBA,uBAwBA,GAxBA,EAwBA;AACA;AACA;AACA,KA3BA;AA4BA,UA5BA,oBA4BA;AACA;AACA,KA9BA;AA+BA,0BA/BA,oCA+BA;AAAA;;AACA;AACA,0BADA;AAEA,kCAFA;AAGA,uBAHA;AAIA,gCAJA;AAKA;AALA,SAMA,IANA,CAMA;AACA;AACA;AACA,OATA;AAUA,KA1CA;AA2CA,4BA3CA,sCA2CA;AACA;AACA,gCADA;AAEA,qOAFA;AAMA;AANA;AAQA;AApDA;AA7CA,G;;;;;;;;;;;AClFA,yC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAA4C;AAC3E;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,4CAA4C,6BAA6B;AACzE;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAA6C;AAC5E;AACA,yCAAyC,8BAA8B;AACvE;AACA;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,yCAAyC,sBAAsB;AAC/D,sCAAsC,6BAA6B;AACnE;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AChMA;AACA;;IAEMA,Q;AACF,sBAAc;AAAA;;AACV,QAAIC,QAAQ,GAAG,KAAKC,KAAL,MAAgB,CAAhB,GAAoB,CAApB,GAAwB,CAAvC,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","file":"/js/game.js","sourcesContent":["<template>\n    <div\n        v-if=\"show\"\n        class=\"scene-html w-full h-full absolute t-0 l-0 flex justify-center items-center animate__animated animate__fadeIn\"\n    >\n        <div\n            class=\"flex items-center justify-center text-center rounded animate__animated animate__backInDown\"\n        >\n            <div v-if=\"toShow === 'initRoom'\" class=\"flex w-full\">\n                <div\n                    class=\"col-create-room flex flex-1 justify-center items-center flex-col\"\n                >\n                    <p class=\"text-gray-700 mb-2\">Create a room</p>\n                    <button\n                        @click=\"createRoom()\"\n                        class=\"bg-pink-700 px-4 py-2 text-white rounded\"\n                    >\n                        Create\n                    </button>\n                </div>\n                <div\n                    class=\"col-go-to-room flex flex-1 justify-center items-center flex-col\"\n                >\n                    <p class=\"text-gray-700 mb-2\">Go to a room</p>\n                    <ul>\n                        <li\n                            v-for=\"(code, i) in codes\"\n                            :key=\"i\"\n                            class=\"flex flex-col mx-1\"\n                        >\n                            <i\n                                @click=\"increaseNum(i)\"\n                                class=\"fa fa-plus\"\n                                aria-hidden=\"true\"\n                            ></i>\n                            <!-- <input type=\"text\" v-model=\"codes[i].val\" /> -->\n                            <span class=\"bg-gray-800\">{{ codes[i].val }}</span>\n                            <i\n                                @click=\"decreaseNum(i)\"\n                                class=\"fa fa-minus\"\n                                aria-hidden=\"true\"\n                            ></i>\n                        </li>\n                    </ul>\n                    <button\n                        @click=\"goToRoom()\"\n                        class=\"bg-blue-700 mt-1 px-4 py-2 text-white rounded\"\n                    >\n                        Go play\n                    </button>\n                    <div v-if=\"roomError\" class=\"room-error text-center mt-2\">\n                        <p class=\"text-red-600\">Invalid room code..</p>\n                        <p class=\"text-red-600 text-xs\">\n                            Try again with another code.\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div v-if=\"toShow === 'roomCode'\">\n                <p class=\"text-gray-700\">\n                    Your opponent can connect to this room code:\n                </p>\n                <ul class=\"room-generated flex justify-center my-3\">\n                    <li v-for=\"num in roomCode.split('')\" class=\"mx-1\">\n                        <span class=\"bg-gray-800\">{{ num }}</span>\n                    </li>\n                </ul>\n                <small class=\"text-green-600 mt-2\"\n                    >Waiting for opponent to connect...</small\n                >\n                <button\n                    @click=\"goBack()\"\n                    class=\"go-back bg-blue-700 block mx-auto mt-4 px-4 py-2 text-white rounded\"\n                >\n                    Go back\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'set-opponent',\n    data() {\n        return {\n            show: false,\n            toShow: 'initRoom',\n            codes: [{ val: 0 }, { val: 0 }, { val: 0 }, { val: 0 }],\n            roomCode: '0000',\n            roomError: false,\n        };\n    },\n    mounted() {\n        game.bus.$on('showSetOpponent', () => {\n            this.codes.map((code) => (code.val = 0));\n            this.toShow = 'initRoom';\n            this.show = true;\n        });\n\n        game.bus.$on('ShowMyRoomId', (roomCode) => {\n            this.roomCode = roomCode;\n            this.toShow = 'roomCode';\n        });\n\n        game.bus.$on('PrintInvalidRoom', () => {\n            this.roomError = true;\n            setTimeout(() => {\n                this.roomError = false;\n            }, 2000);\n        });\n\n        game.bus.$on(\n            'PrintOpponentDisconnected',\n            this.printOpponentDisonnected\n        );\n\n        game.bus.$on('StartRoom', (roomToStart) => {\n            if (roomToStart == this.roomCode) {\n                // This is the room initiator player\n                this.printOpponentConnected();\n            } else {\n                // This is the opponent\n                this.show = false;\n            }\n        });\n    },\n    methods: {\n        createRoom() {\n            game.scene.getScene('SetPlaneScene').socket.send({\n                action: 'getMyRoom',\n            });\n        },\n        goToRoom() {\n            if (this.roomError) return;\n            const roomToGo = this.codes.map((code) => code.val).join('');\n            if (roomToGo == this.roomCode) {\n                game.bus.$emit('PrintInvalidRoom');\n                return;\n            }\n\n            game.gameData.turn.setIsMyTurn(false);\n            game.scene.getScene('SetPlaneScene').socket.send({\n                action: 'goToRoom',\n                room: roomToGo,\n            });\n        },\n        increaseNum(key) {\n            if (this.codes[key].val >= 9) return;\n            this.codes[key].val++;\n        },\n        decreaseNum(key) {\n            if (this.codes[key].val <= 0) return;\n            this.codes[key].val--;\n        },\n        goBack() {\n            this.toShow = 'initRoom';\n        },\n        printOpponentConnected() {\n            Swal.fire({\n                title: \"Let's go!\",\n                text: 'Opponent connected',\n                icon: 'success',\n                showConfirmButton: false,\n                timer: 2000,\n            }).then(() => {\n                //console.log(\"execute then\");\n                this.show = false;\n            });\n        },\n        printOpponentDisonnected() {\n            Swal.fire({\n                showConfirmButton: false,\n                html: `<div class=\"no-opponent\">\n              <i class=\"fa fa-user-times text-red-700 mb-4\" aria-hidden=\"true\"></i>\n              <p class=\"text-gray-700\">Opponent has left the room..</p>    \n          </div>`,\n                timer: 2000,\n            });\n        },\n    },\n};\n</script>\n\n<style scoped lang=\"scss\">\nul {\n    &:not(.room-generated) {\n        display: inherit;\n    }\n\n    li {\n        span {\n            width: 36px;\n            height: 36px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: #eee;\n            border-radius: 2px;\n        }\n\n        i {\n            text-align: center;\n            // font-size: 40px;\n            // margin: -8px 0;\n            font-size: 23px;\n            margin: 3px 0;\n            cursor: pointer;\n            color: #2d3748;\n        }\n    }\n}\n</style>\n","// removed by extract-text-webpack-plugin","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.show\n    ? _c(\n        \"div\",\n        {\n          staticClass:\n            \"scene-html w-full h-full absolute t-0 l-0 flex justify-center items-center animate__animated animate__fadeIn\"\n        },\n        [\n          _c(\n            \"div\",\n            {\n              staticClass:\n                \"flex items-center justify-center text-center rounded animate__animated animate__backInDown\"\n            },\n            [\n              _vm.toShow === \"initRoom\"\n                ? _c(\"div\", { staticClass: \"flex w-full\" }, [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"col-create-room flex flex-1 justify-center items-center flex-col\"\n                      },\n                      [\n                        _c(\"p\", { staticClass: \"text-gray-700 mb-2\" }, [\n                          _vm._v(\"Create a room\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"bg-pink-700 px-4 py-2 text-white rounded\",\n                            on: {\n                              click: function($event) {\n                                return _vm.createRoom()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                    Create\\n                \"\n                            )\n                          ]\n                        )\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"col-go-to-room flex flex-1 justify-center items-center flex-col\"\n                      },\n                      [\n                        _c(\"p\", { staticClass: \"text-gray-700 mb-2\" }, [\n                          _vm._v(\"Go to a room\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"ul\",\n                          _vm._l(_vm.codes, function(code, i) {\n                            return _c(\n                              \"li\",\n                              { key: i, staticClass: \"flex flex-col mx-1\" },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-plus\",\n                                  attrs: { \"aria-hidden\": \"true\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.increaseNum(i)\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"span\", { staticClass: \"bg-gray-800\" }, [\n                                  _vm._v(_vm._s(_vm.codes[i].val))\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-minus\",\n                                  attrs: { \"aria-hidden\": \"true\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.decreaseNum(i)\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          }),\n                          0\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"bg-blue-700 mt-1 px-4 py-2 text-white rounded\",\n                            on: {\n                              click: function($event) {\n                                return _vm.goToRoom()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                    Go play\\n                \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _vm.roomError\n                          ? _c(\n                              \"div\",\n                              { staticClass: \"room-error text-center mt-2\" },\n                              [\n                                _c(\"p\", { staticClass: \"text-red-600\" }, [\n                                  _vm._v(\"Invalid room code..\")\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"p\",\n                                  { staticClass: \"text-red-600 text-xs\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                        Try again with another code.\\n                    \"\n                                    )\n                                  ]\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ]\n                    )\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.toShow === \"roomCode\"\n                ? _c(\"div\", [\n                    _c(\"p\", { staticClass: \"text-gray-700\" }, [\n                      _vm._v(\n                        \"\\n                Your opponent can connect to this room code:\\n            \"\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"ul\",\n                      {\n                        staticClass: \"room-generated flex justify-center my-3\"\n                      },\n                      _vm._l(_vm.roomCode.split(\"\"), function(num) {\n                        return _c(\"li\", { staticClass: \"mx-1\" }, [\n                          _c(\"span\", { staticClass: \"bg-gray-800\" }, [\n                            _vm._v(_vm._s(num))\n                          ])\n                        ])\n                      }),\n                      0\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"small\", { staticClass: \"text-green-600 mt-2\" }, [\n                      _vm._v(\"Waiting for opponent to connect...\")\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"go-back bg-blue-700 block mx-auto mt-4 px-4 py-2 text-white rounded\",\n                        on: {\n                          click: function($event) {\n                            return _vm.goBack()\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n                Go back\\n            \")]\n                    )\n                  ])\n                : _vm._e()\n            ]\n          )\n        ]\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Players from './components/Players';\nimport Turn from './components/Turn';\n\nclass GameData {\n    constructor() {\n        let imageNum = this.getId() == 1 ? 1 : 2;\n        //console.log(imageNum);\n        this.players = {\n            player: {\n                id: this.getId(),\n                name: this.getId() == 1 ? 'Adeline' : 'Rudy',\n                photo: `assets/images/profile-${imageNum}.jpg`,\n            },\n        };\n\n        this.turn = new Turn();\n    }\n\n    // Called from Socket class\n    setOpponent(opponent) {\n        this.players.opponent = opponent;\n\n        const setPlaneScene = game.scene.getScene('SetPlaneScene');\n        setPlaneScene.playersComponent = new Players(setPlaneScene);\n    }\n\n    // helper for debugging\n    getId() {\n        return this.getParameterByName('userId') ?? 1;\n    }\n    getParameterByName(name, url = window.location.href) {\n        name = name.replace(/[\\[\\]]/g, '\\\\$&');\n        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    }\n}\n\nexport default GameData;\n","class Socket {\n    constructor() {\n        this.scene = game.scene.getScene('MainScene');\n        const queryString = $.param(game.gameData.players.player);\n        const url = `ws://192.168.0.105:8080/comm?${queryString}`;\n        const conn = new WebSocket(url);\n\n        conn.onopen = (e) => {\n            console.log(`Connection established to ${url}`);\n        };\n        this.conn = conn;\n        conn.onmessage = (e) => {\n            // console.log(e.data);\n            const msg = JSON.parse(e.data);\n            this.handleReceivedMessage(msg);\n        };\n\n        conn.onerror = () => {\n            Swal.fire({\n                title: 'Ouups!',\n                text:\n                    \"We can't connect to the server now. Please try again later.\",\n                icon: 'error',\n                showConfirmButton: false,\n            });\n        };\n    }\n\n    handleReceivedMessage(msg) {\n        if (!msg.action) return;\n        console.log(msg);\n\n        switch (msg.action) {\n            case 'setMyRoom':\n                //game.scene.getScene('SetOpponentScene').showMyRoomId(msg.room);\n                game.bus.$emit('ShowMyRoomId', msg.room);\n                game.gameData.turn.setIsMyTurn(true);\n                break;\n            case 'invalidRoom':\n                //game.scene.getScene('SetOpponentScene').printInvalidRoom();\n                game.bus.$emit('PrintInvalidRoom');\n                break;\n            case 'enterToRoom':\n                game.gameData.setOpponent(msg.opponent);\n                //game.scene.getScene('SetOpponentScene').startRoom(msg.room);\n                game.bus.$emit('StartRoom', msg.room);\n                break;\n            case 'opponentDisconnected':\n                this.doOpponentDisconnected(msg);\n                break;\n            case 'attack':\n                this.doAttack(msg);\n                game.gameData.turn.reverse();\n                break;\n            case 'setOpponentData':\n                this.doSetOpponentData(msg);\n                break;\n        }\n    }\n\n    doSetOpponentData(msg) {\n        this.scene.opponentData = msg.opponentData;\n    }\n\n    doAttack(msg) {\n        const cellId = msg.cellClicked;\n        if (!cellId) return;\n\n        let isHit = false;\n        const cellNum = cellId.replace('p', '');\n        const rect = this.scene.cells[cellId.replace('p', 'o')].rect;\n\n        game.gameData.turn.printAttackedText(cellNum);\n\n        Object.keys(this.scene.myPlanes).forEach((planeKey) => {\n            const currPlane = this.scene.myPlanes[planeKey].instance;\n            // console.log(currPlane);\n\n            if (currPlane.planeCells.includes(cellNum)) {\n                // Targeted point\n                const headHitted = cellNum == currPlane.headCell;\n                const texture = headHitted ? 'fire-cap' : 'fire';\n\n                const fire = this.scene.add\n                    .image(rect.centerX, rect.centerY, texture)\n                    .setScale(0.6 * game.zoom);\n\n                if (!this.scene.fireGameObjects[planeKey]) {\n                    this.scene.fireGameObjects[planeKey] = [];\n                }\n                this.scene.fireGameObjects[planeKey].push(fire);\n\n                // Delete cell from plane cells\n                currPlane.planeCells.splice(\n                    currPlane.planeCells.indexOf(cellNum),\n                    1\n                );\n\n                // console.log(currPlane.planeCells.length);\n                if (headHitted || currPlane.planeCells.length === 0) {\n                    //console.log('full discovered plane');\n                    this.scene.destroyPlane(planeKey);\n                }\n\n                isHit = true;\n            }\n        });\n\n        if (!isHit) {\n            // Missed point\n            this.scene.add\n                .image(rect.centerX, rect.centerY, 'x')\n                .setScale(0.4 * game.zoom);\n        }\n    }\n\n    doOpponentDisconnected(msg) {\n        console.log('opponent disconnected');\n        game.bus.$emit('PrintOpponentDisconnected');\n        this.scene.scene.start('SetPlaneScene');\n    }\n    // Used external\n    send(msg) {\n        if (this.conn.readyState === WebSocket.CLOSED) return;\n        return this.conn.send(JSON.stringify(msg));\n    }\n}\n\nexport default Socket;\n","class Background {\n    constructor(scene) {\n        this.scene = scene;\n        this.draw();\n    }\n\n    draw() {\n        const x = 0;\n        const y = 0;\n        const squareWidth = game.opts.cellSize;\n        const cellsNum = 26;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawSingleRect(\n                    x + j * squareWidth,\n                    y + i * squareWidth,\n                    squareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n    }\n\n    drawSingleRect(x, y, squareWidth, i, j) {\n        const rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n        const graphics = this.scene.add.graphics({\n            lineStyle: { width: 1 * game.zoom, color: 0xeeeeee },\n        });\n        graphics.strokeRectShape(rect);\n    }\n}\n\nexport default Background;\n","class Explode {\n    constructor(scene) {\n        this.scene = scene;\n        this.create();\n    }\n\n    create() {\n        this.rt = this.scene.make\n            .renderTexture({ x: 0, y: 0, width: 100, height: 100 })\n            .setOrigin(0, 0);\n\n        this.blast = this.scene.add.follower(null, 50, 150, 'smoke');\n        this.blast\n            .setAlpha(0)\n            .setScale(game.zoom / 2)\n            .setDepth(6);\n\n        this.nuke = this.scene.tweens.add({\n            targets: [this.blast],\n            scaleX: 6 * (game.zoom / 2),\n            scaleY: 6 * (game.zoom / 2),\n            alpha: 0,\n            duration: 1000,\n            ease: 'Bounce.easeIn',\n            onStart: () => {\n                this.blast.alpha = 1;\n            },\n            onComplete: () => {\n                this.rt.clear();\n                this.blast.alpha = 0;\n            },\n            paused: true,\n        });\n\n        this.nuke.setCallback('onUpdate', this.draw.bind(this), [], this);\n\n        // this.scene.input.on('pointerdown', (pointer) => {\n        //     this.generate(pointer.x, pointer.y);\n        // });\n    }\n\n    generate(x, y) {\n        this.blast.x = x;\n        this.blast.y = y;\n        this.blast.setScale(0.5);\n        this.blast.alpha = 1;\n\n        this.nuke.play();\n\n        let points = [\n            100 / 3,\n            300 / 3,\n            400 / 3,\n            300 / 3,\n            425 / 3,\n            275 / 3,\n            100 / 3,\n            300 / 3,\n            200 / 3,\n            300 / 3,\n            200 / 3,\n            150 / 3,\n        ];\n\n        let curve = new Phaser.Curves.Spline(points);\n\n        this.blast.setPath(curve);\n        this.blast.startFollow(200);\n    }\n\n    draw() {\n        // this.rt.save();\n\n        let crot = Math.cos(this.blast.rotation + Math.random() * 2);\n        let srot = Math.sin(this.blast.rotation + Math.random() * 2);\n\n        let rand = Math.random() * 2;\n\n        let sx = this.blast.scaleX + rand;\n        let sy = this.blast.scaleY + rand;\n\n        if (Math.random() < 0.8) {\n            this.blast.setTexture('explode');\n        } else {\n            this.blast.setTexture('smoke');\n        }\n\n        this.rt.currentMatrix = [\n            crot * sx,\n            srot,\n            -srot,\n            crot * sy,\n            this.blast.x,\n            this.blast.y,\n        ];\n        this.rt.setAlpha(this.blast.alpha);\n        this.rt.draw(\n            this.blast.texture,\n            this.blast.frame,\n            -this.blast.width / 2,\n            -this.blast.height / 2\n        );\n        // this.rt.restore();\n    }\n}\n\nexport default Explode;\n","class Map {\n    constructor(scene, x, y, type = null, isMainScene = false) {\n        this.type = type;\n        this.scene = scene;\n        this.x = x * game.zoom;\n        this.y = y * game.zoom;\n        this.isMainScene = isMainScene;\n        this.attackedCells = [];\n\n        this.drawMap();\n    }\n\n    drawMap() {\n        const squareWidth = game.opts.cellSize;\n        const cellsNum = 10;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawRect(\n                    this.x + j * squareWidth,\n                    this.y + i * squareWidth,\n                    squareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n\n        this.drawBorder(this.x, this.y, squareWidth, cellsNum);\n\n        // Draw coordinates\n        const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n        for (let i = 0; i < letters.length; i++) {\n            // Draw letters\n            const letter = letters[i].toUpperCase();\n            this.drawText(\n                letter,\n                this.x - game.opts.cellSize / 2,\n                this.y + game.opts.cellSize / 2 + game.opts.cellSize * i\n            );\n\n            // Draw numbers\n            this.drawText(\n                i + 1,\n                this.x + game.opts.cellSize / 2 + game.opts.cellSize * i,\n                this.y - game.opts.cellSize / 2\n            );\n        }\n    }\n\n    drawBorder(x, y, squareWidth, cellsNum) {\n        const width = squareWidth * cellsNum;\n        const rect = new Phaser.Geom.Rectangle(x, y, width, width);\n        const graphics = this.scene.add.graphics({\n            lineStyle: { width: 3 * game.zoom, color: 0x424242 },\n        });\n        graphics.strokeRectShape(rect);\n\n        this.scene.dropZoneRect = rect;\n    }\n\n    drawRect(x, y, squareWidth, i, j) {\n        const rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        const graphics = this.scene.add.graphics({\n            lineStyle: { width: 1 * game.zoom, color: 0x424242 },\n        });\n        graphics.strokeRectShape(rect);\n\n        if (this.isMainScene) {\n            // Rect in MainScene\n            graphics.setInteractive(\n                new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth),\n                Phaser.Geom.Rectangle.Contains\n            );\n\n            const owner = this.type === 'opponent' ? 'p' : 'o';\n\n            const id = `${owner}${j + 1}${i + 1}`;\n            this.scene.cells[id] = { graphics, rect };\n\n            graphics.on('pointerdown', () => {\n                if (this.type !== 'opponent') return;\n\n                if ($.isEmptyObject(this.scene.opponentData)) {\n                    console.log('opponent not ready yet');\n                    return;\n                }\n\n                if (!this.scene.turn.isMyTurn) {\n                    //console.log('not my turn');\n                    game.gameData.turn.scaleText();\n                    return;\n                }\n\n                const cellNum = `${j + 1}${i + 1}`;\n\n                if (this.attackedCells.includes(cellNum)) {\n                    console.log('Already attacked this target');\n                    return;\n                }\n\n                this.scene.socket.send({\n                    action: 'attack',\n                    cellClicked: id,\n                });\n\n                let isHit = false;\n                const opponentPlanes = this.scene.opponentData.planes;\n\n                Object.keys(opponentPlanes).forEach((planeKey) => {\n                    const currPlane = opponentPlanes[planeKey];\n\n                    if (currPlane.cells.includes(cellNum)) {\n                        // Targeted point\n                        let gph = this.scene.add.graphics({\n                            fillStyle: { color: 0x800000 },\n                        });\n                        gph.fillRectShape(rect);\n\n                        const headHitted = cellNum == currPlane.head;\n                        const texture = headHitted ? 'fire-cap' : 'fire';\n\n                        this.scene.add\n                            .image(rect.centerX, rect.centerY, texture)\n                            .setScale(0.6 * game.zoom);\n\n                        // Mark all cells as hitted if head hitted\n                        if (headHitted) {\n                            this.attackedCells = [\n                                ...this.attackedCells,\n                                ...currPlane.cells,\n                            ];\n                            this.revealHittedPlane(currPlane);\n                        }\n\n                        isHit = true;\n                    }\n                });\n\n                if (!isHit) {\n                    // Missed point\n                    this.scene.add\n                        .image(rect.centerX, rect.centerY, 'x')\n                        .setScale(0.4 * game.zoom);\n                }\n\n                this.attackedCells.push(cellNum);\n\n                game.gameData.turn.reverse();\n            });\n        } else {\n            // Rect in SetPlaneScene\n            const id = `${j + 1}${i + 1}`;\n            this.scene.cells[id] = { id, rect };\n        }\n    }\n\n    drawText(text, x, y) {\n        const fontSize = 16 * game.zoom;\n        this.scene.add\n            .text(x, y, text, {\n                color: '#424242',\n                fontFamily: 'Righteous',\n                // stroke: '#000',\n                // strokeThickness: 1,\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(0.5);\n        // .setDepth(4);\n    }\n\n    revealHittedPlane(planeData) {\n        planeData.cells.forEach((cell, i) => {\n            if (cell != planeData.head) {\n                setTimeout(() => {\n                    const rect = this.scene.cells[`p${cell}`].rect;\n                    const gph = this.scene.add.graphics({\n                        fillStyle: { color: 0x800000 },\n                    });\n                    gph.fillRectShape(rect);\n                    this.scene.add\n                        .image(rect.centerX, rect.centerY, 'fire')\n                        .setScale(0.6 * game.zoom);\n                }, i * 80);\n            }\n        });\n    }\n}\n\nexport default Map;\n","class Plane extends Phaser.GameObjects.Sprite {\n    constructor(config) {\n        super(\n            config.scene,\n            config.x * game.zoom,\n            config.y * game.zoom,\n            `plane-${config.planeNum}`\n        );\n\n        config.scene.add.existing(this);\n\n        this.scene = config.scene;\n\n        this.setScale(0.4)\n            .setInteractive()\n            .setData('initialPos', {\n                x: this.x,\n                y: this.y,\n            });\n\n        this.setInteractive();\n        this.scene.input.setDraggable(this);\n        this.scene.input.on('dragstart', this.dragStart, this);\n        this.scene.input.on('dragend', this.dragEnd, this);\n        this.scene.input.on('drag', this.drag, this);\n\n        // Other variables\n        //this.dragObj = null;\n        this.planeName = `plane${config.planeNum}`;\n        this.stablePos = [\n            {\n                x: this.x,\n                y: this.y,\n            },\n        ];\n        this.planeCells = [];\n        this.isInDropZone = false;\n        this.firstClickTime = 0;\n    }\n\n    /**\n     *  Drag & drop logic\n     */\n\n    dragStart(pointer, gameObject) {\n        if (gameObject !== this) return;\n        this.moveToFront();\n        // console.log('start  drag');\n    }\n\n    drag(pointer, gameObject, dragX, dragY) {\n        if (gameObject !== this) return;\n        //console.log('drag');\n        gameObject.x = dragX;\n        gameObject.y = dragY;\n\n        this.scaleOnDrag(pointer);\n    }\n\n    dragEnd(pointer, gameObject) {\n        if (gameObject !== this) return;\n        // console.log('end drag');\n        this.checkDoubleTap(pointer);\n        this.checkIfInDropZone();\n    }\n\n    /**\n     * Visual actions\n     */\n    checkIfInDropZone() {\n        const dropZone = this.getDropZone();\n\n        if (\n            this.x > dropZone.x &&\n            this.x < dropZone.x + dropZone.width &&\n            this.y > dropZone.y &&\n            this.y < dropZone.y + dropZone.height\n        ) {\n            // Inside drop zone\n            this.setScale(1);\n\n            this.repositionToClosest('x');\n            this.repositionToClosest('y');\n\n            this.setPlaneCells();\n\n            this.isInDropZone = true;\n        } else {\n            // Outside drop zone / Go back to initial position\n            this.goToInitialPosition();\n            this.isInDropZone = false;\n        }\n    }\n\n    repositionToClosest(axis) {\n        let isVertical = this.angle === 90 || this.angle === -90;\n\n        if (isVertical) {\n            this.repositionVertical(axis);\n        } else {\n            this.repositionHorizontal(axis);\n        }\n\n        // console.log(isVertical);\n    }\n\n    repositionHorizontal(axis) {\n        let dropZone = this.getDropZone();\n\n        for (let i = 0; i < 10; i++) {\n            if (i < 2) continue;\n\n            let closest = i * game.opts.cellSize;\n            let relativeDistance = this[axis] - dropZone[axis];\n\n            if (axis === 'y') {\n                relativeDistance = relativeDistance + game.opts.cellSize / 2;\n            }\n\n            if (relativeDistance - closest < game.opts.cellSize - 1) {\n                // Horizontal plane\n                let newPos =\n                    closest +\n                    dropZone[axis] +\n                    (axis === 'x' ? game.opts.cellSize / 2 : 0);\n\n                if (i > 7) {\n                    // this.dragObj[axis] =\n                    //     5 * 40 + dropZone[axis] + (axis === 'x' ? 20 : 0);\n                    if (axis === 'x') {\n                        this.x =\n                            7 * game.opts.cellSize +\n                            dropZone.x +\n                            game.opts.cellSize / 2;\n                    } else {\n                        this.y = 8 * game.opts.cellSize + dropZone.y;\n                    }\n                } else {\n                    this[axis] = newPos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    repositionVertical(axis) {\n        let dropZone = this.getDropZone();\n\n        for (let i = 0; i < 11; i++) {\n            if (i < 2) continue;\n\n            let closest = i * game.opts.cellSize;\n            let relativeDistance = this[axis] - dropZone[axis];\n\n            if (axis === 'x') {\n                relativeDistance = relativeDistance + game.opts.cellSize / 2;\n            }\n\n            if (relativeDistance - closest < game.opts.cellSize - 1) {\n                // Horizontal plane\n                let newPos =\n                    closest +\n                    dropZone[axis] +\n                    (axis === 'y' ? game.opts.cellSize / 2 : 0);\n\n                if (i > 7) {\n                    // this.dragObj[axis] =\n                    //     5 * 40 + dropZone[axis] + (axis === 'x' ? 20 : 0);\n                    if (axis === 'x') {\n                        this.x = 8 * game.opts.cellSize + dropZone.x;\n                        //console.log('aici 1');\n                    } else {\n                        this.y =\n                            8 * game.opts.cellSize +\n                            dropZone.x -\n                            game.opts.cellSize / 2;\n                        ///console.log('aici 2');\n                    }\n                } else {\n                    this[axis] = newPos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    goToInitialPosition() {\n        this.scene.tweens.add({\n            targets: [this],\n            x: this.getData('initialPos').x,\n            y: this.getData('initialPos').y,\n            scaleX: game.zoom * 0.4,\n            scaleY: game.zoom * 0.4,\n            duration: 500,\n        });\n\n        // console.log(this.scene.planes);\n        delete this.scene.planes[this.planeName];\n        // console.log(this.scene.planes);\n    }\n\n    scaleOnDrag(pointer) {\n        if (pointer.x < this.getData('initialPos').x) {\n            if (this.isInDropZone) {\n                this.setScale(1.1);\n            } else {\n                this.setScaleNoZoom((game.config.width - this.x) / 450);\n            }\n        }\n    }\n\n    moveToFront() {\n        const objects = this.scene.planesGameObjects;\n        objects.forEach((planeGameObject) => {\n            if (this === planeGameObject) {\n                objects.splice(objects.indexOf(this), 1);\n                objects.push(this);\n            }\n        });\n        objects.forEach((planeGameObject) => {\n            planeGameObject.setDepth(objects.indexOf(planeGameObject));\n        });\n    }\n\n    /**\n     *  Calculations and settings\n     */\n    setPlaneCells() {\n        let headCellId;\n        let planeData = this.getPlanePositionData();\n        let headPoint = planeData.headPoint;\n\n        //console.log(planeData);\n\n        this.scene.cells.forEach((cell) => {\n            if (\n                cell.rect.centerX === headPoint.x &&\n                cell.rect.centerY === headPoint.y\n            ) {\n                headCellId = cell.id;\n            }\n        });\n\n        if (!headCellId) {\n            this.goToInitialPosition();\n            return;\n        }\n\n        let headCords = headCellId.split('').map((num) => parseInt(num));\n        headCords = { x: headCords[0], y: headCords[1] };\n\n        let planeCells = [];\n\n        let schema = planeData.schema;\n\n        let originX = headCords.x + planeData.diff.x;\n        let originY = headCords.y + planeData.diff.y;\n\n        for (let i = 0; i < schema.length; i++) {\n            const line = schema[i];\n            //console.log('line', i);\n\n            for (let j = 0; j < line.length; j++) {\n                const cellPlaceholder = line[j];\n\n                if (cellPlaceholder) {\n                    planeCells.push(`${originX + j}${originY + i}`);\n                }\n\n                //console.log(`${i + 1}${j + 1}`);\n            }\n        }\n\n        // console.log(planeCells);\n        this.planeCells = planeCells;\n        this.headCell = headCellId;\n\n        // Push current plane to planes object\n        const currPlaneExists = Object.keys(this.scene.planes).includes(\n            this.planeName\n        );\n\n        if (!currPlaneExists) {\n            this.scene.planes[this.planeName] = {\n                cells: planeCells,\n                instance: this,\n            };\n        } else {\n            this.scene.planes[this.planeName].cells = planeCells;\n        }\n\n        // Check for overlap\n        let isOverlapping = this.checkOverlap();\n        //console.log(isOverlapping, this.planeName);\n        if (!isOverlapping) {\n            this.stablePos.push({\n                x: this.x,\n                y: this.y,\n            });\n\n            if (this.stablePos.length > 1) {\n                this.stablePos.shift();\n            }\n        }\n\n        //localStorage.setItem('lastPlaceCells', planeCells.join(','));\n    }\n\n    checkOverlap() {\n        let keys = Object.keys(this.scene.planes);\n        if (keys.length < 2) return false;\n\n        let otherPlaneCells;\n\n        keys.forEach((planeKey) => {\n            if (planeKey !== this.planeName) {\n                otherPlaneCells = this.scene.planes[planeKey].cells;\n            }\n        });\n\n        let overlap = false;\n\n        for (let i = 0; i < this.planeCells.length; i++) {\n            if (otherPlaneCells.includes(this.planeCells[i])) {\n                //console.log('overlap');\n\n                // Reposition plane back to last stable positio\n                if (\n                    this.stablePos[0].x === this.getData('initialPos').x &&\n                    this.stablePos[0].y === this.getData('initialPos').y\n                ) {\n                    this.goToInitialPosition();\n\n                    //console.log('overl init');\n                } else {\n                    this.x = this.stablePos[0].x;\n                    this.y = this.stablePos[0].y;\n                    // console.log('overl afetr');\n                }\n\n                // console.log(this.planeCells[i]);\n\n                overlap = true;\n                break;\n            }\n        }\n\n        return overlap;\n    }\n\n    getDropZone() {\n        let { x, y, width, height } = this.scene.dropZoneRect;\n        return { x, y, width, height };\n    }\n\n    getPlanePositionData() {\n        let schema;\n        let headPoint;\n        let diff; // Compute start point difference\n        // It is distance in cells from plane head\n        // to plane margin (top/left 0)\n\n        switch (this.angle) {\n            case 90:\n                headPoint = {\n                    x:\n                        this.x +\n                        (this.height * game.zoom) / 2 -\n                        game.opts.cellSize / 2,\n                    y: this.y,\n                };\n                schema = [\n                    [0, 0, 1, 0],\n                    [1, 0, 1, 0],\n                    [1, 1, 1, 1],\n                    [1, 0, 1, 0],\n                    [0, 0, 1, 0],\n                ];\n                diff = {\n                    x: -3,\n                    y: -2,\n                };\n                break;\n            case -180:\n                headPoint = {\n                    x: this.x,\n                    y:\n                        this.y +\n                        (this.height * game.zoom) / 2 -\n                        game.opts.cellSize / 2,\n                };\n                schema = [\n                    [0, 1, 1, 1, 0],\n                    [0, 0, 1, 0, 0],\n                    [1, 1, 1, 1, 1],\n                    [0, 0, 1, 0, 0],\n                ];\n                diff = {\n                    x: -2,\n                    y: -3,\n                };\n                break;\n            case -90:\n                headPoint = {\n                    x:\n                        this.x -\n                        (this.height * game.zoom) / 2 +\n                        game.opts.cellSize / 2,\n                    y: this.y,\n                };\n                schema = [\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 1],\n                    [1, 1, 1, 1],\n                    [0, 1, 0, 1],\n                    [0, 1, 0, 0],\n                ];\n                diff = {\n                    x: 0,\n                    y: -2,\n                };\n                break;\n\n            default:\n                headPoint = {\n                    x: this.x,\n                    y:\n                        this.y -\n                        (this.height * game.zoom) / 2 +\n                        game.opts.cellSize / 2,\n                };\n                schema = [\n                    [0, 0, 1, 0, 0],\n                    [1, 1, 1, 1, 1],\n                    [0, 0, 1, 0, 0],\n                    [0, 1, 1, 1, 0],\n                ];\n                diff = {\n                    x: -2,\n                    y: 0,\n                };\n        }\n\n        return { schema, headPoint, diff };\n    }\n\n    /**\n     * Double tap check\n     */\n    checkDoubleTap() {\n        if (!this.lastClickTime) {\n            this.lastClickTime = this.scene.time.now;\n            return;\n        }\n        const clickDelay = this.scene.time.now - this.lastClickTime;\n        this.lastClickTime = this.scene.time.now;\n        if (clickDelay < 350) {\n            this.angle += 90;\n            // this.repositionToClosest('x');\n            // this.repositionToClosest('y');\n        }\n    }\n\n    /**\n     * Override inherited methods\n     */\n    setScale(scale) {\n        super.setScale(scale * game.zoom);\n        return this;\n    }\n\n    setScaleNoZoom(scale) {\n        super.setScale(scale);\n        return this;\n    }\n}\n\nexport default Plane;\n","class Players {\n    constructor(scene) {\n        this.scene = scene;\n        this.player = game.gameData.players.player;\n        this.opponent = game.gameData.players.opponent;\n\n        this.printBackground();\n        this.printPlayer();\n        this.loadOpponent();\n    }\n\n    printBackground() {\n        const rect = new Phaser.Geom.Rectangle(\n            0,\n            0,\n            game.config.width,\n            66 * game.zoom\n        );\n        const graphics = this.scene.add.graphics();\n        graphics.fillStyle(0x000000, 0.6);\n        graphics.fillRectShape(rect);\n    }\n\n    loadOpponent() {\n        if (this.scene.textures.exists(`opponent-${this.opponent.id}`)) {\n            this.printOpponent();\n            return;\n        }\n\n        this.scene.load.image(\n            `opponent-${this.opponent.id}`,\n            this.opponent.photo\n        );\n        this.scene.load.on('complete', this.printOpponent, this);\n        this.scene.load.start();\n    }\n\n    printPlayer() {\n        this.printPlayerPhoto('player', 30, 10);\n        this.printPlayerName(this.player.name, 90, 50, 0);\n    }\n\n    printOpponent() {\n        this.printPlayerPhoto(\n            `opponent-${this.opponent.id}`,\n            game.opts.defaultWidth - 80,\n            10\n        );\n        this.printPlayerName(\n            this.opponent.name,\n            game.opts.defaultWidth - 90,\n            50\n        );\n    }\n\n    printPlayerPhoto(key, x, y) {\n        const width = 50 * game.zoom;\n        const height = width;\n\n        x = x * game.zoom;\n        y = y * game.zoom;\n\n        // Create mask\n        const shape = this.scene.add.graphics();\n        shape.fillStyle(0x000000, 1);\n        shape.fillRoundedRect(x, y, width, height, 6 * game.zoom);\n        const mask = shape.createGeometryMask();\n\n        // Add player image\n        const img = this.scene.add\n            .image(x, y, key)\n            .setDepth(4)\n            .setMask(mask)\n            .setOrigin(0);\n\n        img.displayWidth = width;\n        img.displayHeight = height;\n    }\n\n    printPlayerName(name, x, y, originX = 1) {\n        const fontSize = 20 * game.zoom;\n        this.scene.add\n            .text(x * game.zoom, y * game.zoom, name, {\n                color: '#fff',\n                fontFamily: 'Righteous',\n                stroke: 'rgba(0,0,0,.6)',\n                strokeThickness: 1,\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(originX, 0.5)\n            .setDepth(4);\n    }\n}\n\nexport default Players;\n","class Turn {\n    constructor() {\n        this.text = null;\n        this.isMyTurn = false; // used in Mainscene to allow/disallow clicking on cells\n    }\n\n    setScene(scene) {\n        this.scene = scene;\n        this.printTurnText();\n        this.updateTurnText();\n    }\n\n    setIsMyTurn(bool) {\n        this.isMyTurn = bool;\n    }\n\n    reverse() {\n        this.isMyTurn = !this.isMyTurn;\n        setTimeout(this.updateTurnText.bind(this), 2000);\n    }\n\n    getTurnText() {\n        return this.isMyTurn ? 'Your turn' : 'Opponent turn. Please wait..';\n    }\n\n    printTurnText() {\n        const fontSize = 16 * game.zoom;\n        this.text = this.scene.add\n            .text(game.config.width / 2, 36 * game.zoom, this.getTurnText(), {\n                color: '#fff',\n                fontFamily: 'Righteous',\n                stroke: 'rgba(0,0,0,.6)',\n                strokeThickness: 1,\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(0.5)\n            .setDepth(4);\n    }\n\n    printAttackedText(cellNum) {\n        const point = this.getLetterPoint(cellNum);\n        this.text.setText(`Opponent attacked ${point}`).setColor('#fff');\n        const tween = this.scene.tweens.add({\n            targets: [this.text],\n            scaleX: 1.5,\n            scaleY: 1.5,\n            duration: 400,\n            yoyo: true,\n            onComplete: () => {\n                //   this.text.setColor('#fff').setScale(1);\n            },\n        });\n    }\n\n    updateTurnText() {\n        setTimeout(() => {\n            const color = this.isMyTurn ? '#0a9c00' : '#f79e0f';\n            this.text.setText(this.getTurnText()).setColor(color);\n\n            const tween = this.scene.tweens.add({\n                targets: [this.text],\n                scaleX: 1.5,\n                scaleY: 1.5,\n                duration: 400,\n                yoyo: true,\n                onComplete: () => {\n                    this.text.setColor('#fff').setScale(1);\n                },\n            });\n        }, 400);\n    }\n\n    scaleText() {\n        this.text.setText(this.getTurnText()).setColor('#ff0000');\n        const tween = this.scene.tweens.add({\n            targets: [this.text],\n            scaleX: 1.5,\n            scaleY: 1.5,\n            duration: 400,\n            yoyo: true,\n            onComplete: () => {\n                this.text.setColor('#fff').setScale(1);\n            },\n        });\n    }\n\n    getLetterPoint(cellNum) {\n        let point;\n        const splitted = cellNum.split('');\n        const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n\n        if (/10/g.exec(cellNum) !== null) {\n            if (cellNum === '1010') {\n                point = 'J10';\n            } else if (/^10/.exec(cellNum) !== null) {\n                point = letters[splitted[2] - 1] + '10';\n            } else {\n                point = 'J' + splitted[0];\n            }\n        } else {\n            point = letters[splitted[1] - 1] + splitted[0];\n        }\n\n        return point;\n    }\n}\n\nexport default Turn;\n","import Vue from 'vue';\nimport Phaser from 'phaser';\nimport Swal from 'sweetalert2';\nimport Helpers from './helpers';\n\nwindow.Swal = Swal;\nwindow.jQuery = window.$ = require('jquery');\n// window.axios = require('axios');\n// window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\nimport LoadScene from './scenes/LoadScene';\nimport MainScene from './scenes/MainScene';\nimport StartScene from './scenes/StartScene';\nimport SetPlaneScene from './scenes/SetPlaneScene';\n//import SetOpponentScene from './scenes/SetOpponentScene';\n\nimport SetOpponent from './vue-components/SetOpponent.vue';\n\nconst zoom = Helpers.getDevicePixelRatio();\n\nconst config = {\n    type: Phaser.AUTO,\n    width: 800 * zoom,\n    height: 458 * zoom,\n    parent: 'game',\n    title: 'The Airplanes with Friends',\n    version: '0.1.0',\n    url: '',\n};\n\nconst game = new Phaser.Game(config);\n\ngame.zoom = zoom;\ngame.opts = {\n    cellSize: 32 * zoom,\n    defaultWidth: 800,\n    defaultHeight: 458,\n};\ngame.bus = new Vue();\n\ngame.scene.add('LoadScene', new LoadScene());\ngame.scene.add('MainScene', new MainScene());\ngame.scene.add('StartScene', new StartScene());\ngame.scene.add('SetPlaneScene', new SetPlaneScene());\n//game.scene.add('SetOpponentScene', new SetOpponentScene());\ngame.scene.start('LoadScene');\n\nwindow.game = game;\n\nnew Vue({\n    render: (h) => h(SetOpponent),\n}).$mount('#game div');\n","export default {\n    getDevicePixelRatio() {\n        let mediaQuery;\n        let is_firefox =\n            navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n        if (window.devicePixelRatio !== undefined && !is_firefox) {\n            return window.devicePixelRatio;\n        } else if (window.matchMedia) {\n            mediaQuery =\n                '(-webkit-min-device-pixel-ratio: 1.5),\\\n              (min--moz-device-pixel-ratio: 1.5),\\\n              (-o-min-device-pixel-ratio: 3/2),\\\n              (min-resolution: 1.5dppx)';\n            if (window.matchMedia(mediaQuery).matches) {\n                return 1.5;\n            }\n            mediaQuery =\n                '(-webkit-min-device-pixel-ratio: 2),\\\n              (min--moz-device-pixel-ratio: 2),\\\n              (-o-min-device-pixel-ratio: 2/1),\\\n              (min-resolution: 2dppx)';\n            if (window.matchMedia(mediaQuery).matches) {\n                return 2;\n            }\n            mediaQuery =\n                '(-webkit-min-device-pixel-ratio: 0.75),\\\n              (min--moz-device-pixel-ratio: 0.75),\\\n              (-o-min-device-pixel-ratio: 3/4),\\\n              (min-resolution: 0.75dppx)';\n            if (window.matchMedia(mediaQuery).matches) {\n                return 0.7;\n            }\n        } else {\n            return 1;\n        }\n    },\n};\n","import GameData from '../GameData';\nimport Background from '../components/Background';\n\nclass LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'LoadScene',\n        });\n    }\n\n    init() {\n        game.gameData = new GameData();\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    preload() {\n        /**\n         * LoadScene images\n         */\n        // Player photo\n        this.load.image('player', game.gameData.players.player.photo);\n\n        // Buttons or other game elements\n        this.load.image('play-btn', 'assets/images/play-btn.png');\n        this.load.image('btn-start-game', 'assets/images/btn-start-game.png');\n\n        // Fire & X\n        this.load.image('x', 'assets/images/x.png');\n        this.load.image('fire', 'assets/images/fire.png');\n        this.load.image('fire-cap', 'assets/images/fire-cap.png');\n\n        // Planes\n        this.load.image('plane-1', 'assets/images/planes/plane-1.png');\n        this.load.image('plane-2', 'assets/images/planes/plane-2.png');\n\n        //Explosion images\n        this.load.image('smoke', 'assets/images/particles/smoke-puff.png');\n        this.load.image('explode', 'assets/images/particles/muzzleflash3.png');\n\n        // // Testing load scene\n        // for (let i = 0; i < 500; i++) {\n        //     this.load.image('plane-' + i, 'assets/images/planes/plane-2.png');\n        // }\n\n        this.showPreloader();\n    }\n\n    showPreloader() {\n        let scene = this;\n\n        let bg = new Background(scene);\n\n        let fontStyle = {\n            fontFamily: 'Righteous',\n            fontSize: 28 * game.zoom,\n            color: '#2d3748',\n            stroke: '#fff',\n            strokeThickness: 2,\n            shadow: {\n                offsetX: 1,\n                offsetY: 1,\n                color: '#fff',\n                blur: 0,\n                stroke: true,\n                fill: true,\n            },\n        };\n\n        let progressBar = scene.add.graphics();\n        let progressBox = scene.add.graphics();\n        progressBox.fillStyle(0x222222, 0.05);\n        progressBox.fillRect(\n            (game.config.width - 250 * game.zoom) / 2,\n            game.config.height / 2 + 40 * game.zoom,\n            250 * game.zoom,\n            50 * game.zoom\n        );\n\n        let width = scene.cameras.main.width;\n        let height = scene.cameras.main.height;\n        let loadingText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 50 * game.zoom,\n            text: 'Loading...',\n            style: fontStyle,\n        });\n        loadingText.setOrigin(0.5, 0.5);\n\n        let percentText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 5 * game.zoom,\n            text: '0%',\n            style: fontStyle,\n        });\n        percentText.setOrigin(0.5, 0.5);\n\n        scene.load.on('progress', (value) => {\n            percentText.setText(parseInt(value * 100) + '%');\n            progressBar.clear();\n            // progressBar.fillStyle(0xbf4689, 1);\n            progressBar.fillStyle(0x2d3748, 1);\n            progressBar.fillRect(\n                (game.config.width - 250 * game.zoom) / 2 + 5 * game.zoom,\n                game.config.height / 2 + 50 * game.zoom,\n                240 * value * game.zoom,\n                30 * game.zoom\n            );\n        });\n\n        scene.load.on('complete', () => {\n            // console.log('preload done')\n\n            progressBar.destroy();\n            progressBox.destroy();\n            loadingText.destroy();\n            percentText.destroy();\n\n            //game.scene.start('Start');\n            this.scene.stop();\n            game.scene.start('SetPlaneScene');\n        });\n    }\n}\n\nexport default LoadScene;\n","import Map from '../components/Map';\nimport Players from '../components/Players';\nimport Explode from '../components/Explode';\nimport Background from '../components/Background';\n\nclass MainScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'MainScene',\n        });\n\n        this.cells = {};\n        this.opponentData = {}; // it's set on Socket class\n    }\n\n    init(data) {\n        this.myPlanes = data.planesData.planes;\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    //debug\n    // drawByCells(cells) {\n    //     //console.log(this.cells);\n\n    //     cells.forEach((cl) => {\n    //         //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //         var graphics = this.add.graphics({\n    //             lineStyle: { width: 3, color: 0x000000 },\n    //         });\n    //         graphics.strokeRectShape(this.cells[`o${cl}`].rect);\n    //     });\n    // }\n\n    create() {\n        // console.log('main create');\n        this.fireGameObjects = {};\n        this.planesGameObjects = {};\n\n        this.explode = new Explode(this);\n\n        const background = new Background(this);\n        const playersComponent = new Players(this);\n\n        const playerMap = new Map(this, 96 - 32, 98, null, true);\n        const opponentMap = new Map(this, 96 + 32 * 11, 98, 'opponent', true);\n\n        // Extract neccesarry data to send as opponent data\n        const dataToSend = { planes: {} };\n        Object.keys(this.myPlanes).forEach((planeKey) => {\n            const currPlane = this.myPlanes[planeKey];\n            // console.log(currPlane);\n            dataToSend.planes[planeKey] = {\n                cells: currPlane.instance.planeCells,\n                head: currPlane.instance.headCell,\n            };\n        });\n\n        // Send data to opponent\n        this.socket.send({\n            action: 'setOpponentData',\n            opponentData: dataToSend,\n        });\n\n        this.drawPlanes();\n\n        this.turn = game.gameData.turn;\n        this.turn.setScene(this);\n\n        this.printTerritoryText();\n\n        //console.log(this.turn);\n\n        //debug\n\n        // this.drawByCells(this.myPlanesCells);\n    }\n\n    drawPlanes() {\n        // console.log(this.myPlanes);\n\n        Object.keys(this.myPlanes).forEach((planeKey) => {\n            const playerMapLeftDiff = game.opts.cellSize; // Difference between left margin of maps on SetPlaneScene vs MainScene\n            const plane = this.myPlanes[planeKey].instance;\n            const planeImage = this.add\n                .image(plane.x - playerMapLeftDiff, plane.y, plane.texture.key)\n                .setAngle(plane.angle)\n                .setAlpha(0.9)\n                .setScale(game.zoom);\n\n            this.planesGameObjects[planeKey] = planeImage;\n        });\n    }\n\n    printTerritoryText() {\n        const gameWidth = game.opts.defaultWidth;\n        const x1 = gameWidth / 4 + (game.opts.cellSize / 2) * game.zoom;\n        const x2 = gameWidth - gameWidth / 4;\n        const y = game.opts.defaultHeight - 20;\n        this.printText(x1, y, 'Your territory');\n        this.printText(x2, y, 'Opponent territory');\n    }\n\n    printText(x, y, text) {\n        x = x * game.zoom;\n        y = y * game.zoom;\n        const fontSize = 14 * game.zoom;\n        this.add\n            .text(x, y, text, {\n                color: '#424242',\n                fontFamily: 'Righteous',\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(0.5)\n            .setAlpha(0.7);\n    }\n\n    /**\n     * Destroy if plane head or all plane cells hitted\n     * Called on Socket class\n     */\n    destroyPlane(planeKey) {\n        const plane = this.planesGameObjects[planeKey];\n        const fires = this.fireGameObjects[planeKey];\n\n        // Explode plane\n        this.explode.generate(plane.x, plane.y);\n        plane.setAlpha(0.3);\n\n        // Delete from remaining planes, so can detect game over\n        delete this.planesGameObjects[planeKey];\n\n        // Remove fire game objects\n        fires.forEach((fire) => fire.destroy());\n\n        // Check game over\n        if ($.isEmptyObject(this.planesGameObjects)) {\n            console.log('Game OVERRRRRRRR');\n        }\n    }\n}\n\nexport default MainScene;\n","import Socket from '../Socket';\nimport Map from '../components/Map';\nimport Plane from '../components/Plane';\nimport Background from '../components/Background';\n\nclass SetPlaneScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'SetPlaneScene',\n            physics: {\n                arcade: {\n                    //debug: true,\n                },\n            },\n        });\n\n        //this.cellSize = 40;\n        // this.cells = [];\n\n        // this.planes = {};\n        // this.planesGameObjects = [];\n    }\n\n    init() {\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    create() {\n        this.cells = [];\n        this.planes = {};\n        this.planesGameObjects = [];\n\n        // this.drawSceneBackground();\n        const background = new Background(this);\n\n        // // Setup players\n        //this.players = new Players(this);\n\n        // const x = 120;\n        // const y = 80;\n        // this.drawPlayerMap(x, y);\n        const map = new Map(this, 96, 98);\n\n        //this.plane = new Plane(this);\n        let plane1 = new Plane({\n            scene: this,\n            x: game.config.width / game.zoom / 2 + 200,\n            y: 140,\n            planeNum: 1,\n        });\n\n        this.planesGameObjects.push(plane1);\n\n        let plane2 = new Plane({\n            scene: this,\n            x: game.config.width / game.zoom / 2 + 300,\n            y: 140,\n            planeNum: 2,\n        });\n\n        this.planesGameObjects.push(plane2);\n\n        // Start game btn\n        this.addStartGame();\n\n        let mainScene = game.scene.getScene('MainScene');\n        // mainScene.players = new Players(mainScene);\n\n        // ---\n        this.socket = new Socket();\n        mainScene.socket = this.socket;\n        // ---\n\n        // Set opponent screen\n        // this.scene.stop();\n\n        //new Players(this);\n\n        // ---\n        this.scene\n            .launch('StartScene', {\n                setPlaneScene: this,\n            })\n            .bringToTop('StartScene');\n        // ---\n\n        //\n        //\n        ///\n        // this.scene.launch('SetOpponentScene', {\n        //     setPlaneScene: this,\n        // });\n\n        // setTimeout(() => {\n        //     this.scene.stop('SetOpponentScene');\n        //     this.scene.resume();\n        // }, 4000);\n\n        //debug\n        window.socket = this.socket;\n        window.SetPlaneScene = this;\n\n        // let cls = localStorage.getItem('lastPlaceCells').split(',');\n        // this.drawByCells(cls);\n    }\n\n    addStartGame() {\n        this.add\n            .image(630 * game.zoom, 384 * game.zoom, 'btn-start-game')\n            .setScale(game.zoom)\n            .setInteractive({ useHandCursor: true })\n            .on('pointerup', () => {\n                //// let heads = [];\n                //let allPlanesCells = [];\n\n                let keys = Object.keys(this.planes);\n                let keysLength = keys.length;\n\n                if (keysLength < 2) {\n                    // add 2 planes\n                    console.log('Add 2 planes to map');\n                    return;\n                }\n\n                // for (let i = 0; i < keysLength; i++) {\n                //     //heads.push(this.planes[keys[i]].cells[0]);\n                //     allPlanesCells = [\n                //         ...allPlanesCells,\n                //         ...this.planes[keys[i]].cells,\n                //     ];\n                // }\n\n                //console.log(this.planes);\n\n                this.scene.stop();\n                this.scene.start('MainScene', {\n                    planesData: {\n                        //cells: allPlanesCells,\n                        planes: this.planes,\n                    },\n                });\n            });\n    }\n\n    // debug\n    drawByCells(cells) {\n        cells.forEach((cl) => {\n            //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n            var graphics = this.add.graphics({\n                lineStyle: { width: 3, color: 0x000000 },\n            });\n            graphics.strokeRectShape(this.cells[cl].rect);\n        });\n    }\n\n    // drawPlayerMap(x, y) {\n    //     const squareWidth = this.cellSize;\n    //     const cellsNum = 8;\n\n    //     for (let i = 0; i < cellsNum; i++) {\n    //         // Go vertical\n    //         for (let j = 0; j < cellsNum; j++) {\n    //             // Go horizontal\n    //             this.drawRect(\n    //                 x + j * squareWidth,\n    //                 y + i * squareWidth,\n    //                 squareWidth,\n    //                 i,\n    //                 j\n    //             );\n    //         }\n    //     }\n\n    //     this.drawBorder(x, y, squareWidth, cellsNum);\n    // }\n\n    // drawBorder(x, y, squareWidth, cellsNum) {\n    //     let width = squareWidth * cellsNum;\n    //     let rect = new Phaser.Geom.Rectangle(x, y, width, width);\n    //     //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //     let graphics = this.add.graphics({\n    //         lineStyle: { width: 3, color: 0x000000 },\n    //     });\n    //     graphics.strokeRectShape(rect);\n\n    //     this.dropZoneRect = rect;\n    // }\n\n    // drawRect(x, y, squareWidth, i, j, type) {\n    //     let rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n    //     //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //     let graphics = this.add.graphics({\n    //         lineStyle: { width: 1, color: 0x000000 },\n    //     });\n    //     graphics.strokeRectShape(rect);\n\n    //     const id = `${j + 1}${i + 1}`;\n\n    //     this.cells[id] = { id, rect };\n    // }\n\n    // drawSceneBackground() {\n    //     const x = 0;\n    //     const y = 0;\n    //     const squareWidth = this.cellSize;\n    //     const cellsNum = 20;\n\n    //     for (let i = 0; i < cellsNum; i++) {\n    //         // Go vertical\n    //         for (let j = 0; j < cellsNum; j++) {\n    //             // Go horizontal\n    //             this.drawBgRect(\n    //                 x + j * squareWidth,\n    //                 y + i * squareWidth,\n    //                 squareWidth,\n    //                 i,\n    //                 j\n    //             );\n    //         }\n    //     }\n    // }\n\n    // drawBgRect(x, y, squareWidth, i, j) {\n    //     let rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n    //     //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //     var graphics = this.add.graphics({\n    //         lineStyle: { width: 1, color: 0xeeeeee },\n    //     });\n    //     graphics.strokeRectShape(rect);\n    // }\n}\n\nexport default SetPlaneScene;\n","class StartScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'StartScene',\n        });\n    }\n\n    init(data) {\n        this.setPlaneScene = data.setPlaneScene;\n    }\n\n    create() {\n        const rect = new Phaser.Geom.Rectangle(\n            0,\n            0,\n            game.config.width,\n            game.config.height\n        );\n        const graphics = this.add.graphics();\n        graphics.fillStyle(0x000000, 0.8);\n        graphics.fillRectShape(rect);\n\n        const playBtn = this.add\n            .image(game.config.width / 2, game.config.height / 2, 'play-btn')\n            .setScale(game.zoom * 0.5)\n            .setAlpha(0.7)\n            .setInteractive({ useHandCursor: true })\n            .on('pointerdown', this.start, this);\n\n        this.tweens.add({\n            targets: [playBtn],\n            scaleX: 0.6,\n            scaleY: 0.6,\n            alpha: 1,\n            duration: 1000,\n            repeat: -1,\n            yoyo: true,\n            ease: 'Circ.easeIn',\n        });\n    }\n\n    start() {\n        this.scene.stop();\n        game.bus.$emit('showSetOpponent');\n        // this.scene.launch('SetOpponentScene', {\n        //     setPlaneScene: this.setPlaneScene,\n        // });\n    }\n}\n\nexport default StartScene;\n","import { render, staticRenderFns } from \"./SetOpponent.vue?vue&type=template&id=580e046a&scoped=true&\"\nimport script from \"./SetOpponent.vue?vue&type=script&lang=js&\"\nexport * from \"./SetOpponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SetOpponent.vue?vue&type=style&index=0&id=580e046a&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"580e046a\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/html/airplane/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('580e046a')) {\n      api.createRecord('580e046a', component.options)\n    } else {\n      api.reload('580e046a', component.options)\n    }\n    module.hot.accept(\"./SetOpponent.vue?vue&type=template&id=580e046a&scoped=true&\", function () {\n      api.rerender('580e046a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/js/vue-components/SetOpponent.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--7-0!../../../node_modules/style-loader/index.js!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-3!../../../node_modules/sass-loader/dist/cjs.js??ref--7-4!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=style&index=0&id=580e046a&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--7-0!../../../node_modules/style-loader/index.js!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-3!../../../node_modules/sass-loader/dist/cjs.js??ref--7-4!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=style&index=0&id=580e046a&scoped=true&lang=scss&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=template&id=580e046a&scoped=true&\"","// removed by extract-text-webpack-plugin"],"sourceRoot":""}