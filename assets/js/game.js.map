{"version":3,"sources":["webpack:///src/js/vue-components/SetOpponent.vue","webpack:///./src/js/vue-components/SetOpponent.vue?98c6","webpack:///./src/js/vue-components/SetOpponent.vue?a3fc","webpack:///./src/js/GameData.js","webpack:///./src/js/Socket.js","webpack:///./src/js/components/Background.js","webpack:///./src/js/components/Map.js","webpack:///./src/js/components/Plane.js","webpack:///./src/js/components/Players.js","webpack:///./src/js/components/Turn.js","webpack:///./src/js/game.js","webpack:///./src/js/helpers.js","webpack:///./src/js/scenes/LoadScene.js","webpack:///./src/js/scenes/MainScene.js","webpack:///./src/js/scenes/SetPlaneScene.js","webpack:///./src/js/scenes/StartScene.js","webpack:///./src/js/vue-components/SetOpponent.vue","webpack:///./src/js/vue-components/SetOpponent.vue?a078","webpack:///./src/js/vue-components/SetOpponent.vue?35b5","webpack:///./src/js/vue-components/SetOpponent.vue?2fd9","webpack:///./src/sass/game.scss?4097"],"names":["GameData","imageNum","getId","players","player","id","name","getParameterByName","photo","turn","Turn","opponent","setPlaneScene","game","scene","getScene","playersComponent","Players","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","Socket","queryString","$","param","gameData","conn","WebSocket","onopen","e","console","log","onmessage","msg","JSON","parse","data","handleReceivedMessage","onerror","Swal","fire","title","text","icon","showConfirmButton","action","bus","$emit","room","setIsMyTurn","setOpponent","doOpponentDisconnected","doAttack","reverse","doSetOpponentData","opponentData","cellId","cellClicked","isHit","cellNum","rect","cells","printAttackedText","Object","keys","myPlanes","forEach","planeKey","currPlane","instance","planeCells","includes","headHitted","headCell","texture","add","image","centerX","centerY","setScale","zoom","splice","indexOf","length","start","readyState","CLOSED","send","stringify","Background","draw","x","y","squareWidth","opts","cellSize","cellsNum","i","j","drawSingleRect","Phaser","Geom","Rectangle","graphics","lineStyle","width","color","strokeRectShape","Map","type","isMainScene","attackedCells","drawMap","drawRect","drawBorder","letters","letter","toUpperCase","drawText","dropZoneRect","setInteractive","Contains","owner","on","isEmptyObject","isMyTurn","scaleText","socket","opponentPlanes","planes","gph","fillStyle","fillRectShape","head","push","setTimeout","fontSize","fontFamily","setOrigin","Plane","config","planeNum","existing","setData","input","setDraggable","dragStart","dragEnd","drag","planeName","stablePos","isInDropZone","firstClickTime","pointer","gameObject","moveToFront","dragX","dragY","scaleOnDrag","checkDoubleTap","checkIfInDropZone","dropZone","getDropZone","height","repositionToClosest","setPlaneCells","goToInitialPosition","axis","isVertical","angle","repositionVertical","repositionHorizontal","closest","relativeDistance","newPos","tweens","targets","getData","scaleX","scaleY","duration","setScaleNoZoom","objects","planesGameObjects","planeGameObject","setDepth","headCellId","planeData","getPlanePositionData","headPoint","cell","headCords","split","map","num","parseInt","schema","originX","diff","originY","line","cellPlaceholder","currPlaneExists","isOverlapping","checkOverlap","shift","otherPlaneCells","overlap","lastClickTime","time","now","clickDelay","scale","GameObjects","Sprite","printBackground","printPlayer","loadOpponent","textures","exists","printOpponent","load","printPlayerPhoto","printPlayerName","defaultWidth","key","shape","fillRoundedRect","mask","createGeometryMask","img","setMask","displayWidth","displayHeight","stroke","strokeThickness","printTurnText","updateTurnText","bool","getTurnText","splitted","point","setText","setColor","tween","yoyo","onComplete","require","Helpers","getDevicePixelRatio","AUTO","parent","version","Game","defaultHeight","Vue","LoadScene","MainScene","StartScene","SetPlaneScene","render","h","SetOpponent","$mount","mediaQuery","is_firefox","navigator","userAgent","toLowerCase","devicePixelRatio","undefined","matchMedia","matches","cameras","main","setBackgroundColor","showPreloader","bg","fontStyle","shadow","offsetX","offsetY","blur","fill","progressBar","progressBox","fillRect","loadingText","make","style","percentText","value","clear","destroy","stop","Scene","planesData","background","playerMap","opponentMap","dataToSend","drawPlanes","setScene","printTerritoryText","playerMapLeftDiff","plane","planeImage","setAngle","setAlpha","gameWidth","x1","x2","printText","physics","arcade","plane1","plane2","addStartGame","mainScene","launch","bringToTop","useHandCursor","keysLength","cl","playBtn","alpha","repeat","ease"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA,sBADA;AAEA,MAFA,kBAEA;AACA;AACA,iBADA;AAEA,wBAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA;AAIA,sBAJA;AAKA;AALA;AAOA,GAVA;AAWA,SAXA,qBAWA;AAAA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA,KAJA;AAMA;AACA;AACA;AACA,KAHA;AAKA;AACA;AACA;AACA;AACA,OAFA,EAEA,IAFA;AAGA,KALA;AAOA,iBACA,2BADA,EAEA,6BAFA;AAKA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,KARA;AASA,GA5CA;AA6CA;AACA,cADA,wBACA;AACA;AACA;AADA;AAGA,KALA;AAMA,YANA,sBAMA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BADA;AAEA;AAFA;AAIA,KAnBA;AAoBA,eApBA,uBAoBA,GApBA,EAoBA;AACA;AACA;AACA,KAvBA;AAwBA,eAxBA,uBAwBA,GAxBA,EAwBA;AACA;AACA;AACA,KA3BA;AA4BA,UA5BA,oBA4BA;AACA;AACA,KA9BA;AA+BA,0BA/BA,oCA+BA;AAAA;;AACA;AACA,0BADA;AAEA,kCAFA;AAGA,uBAHA;AAIA,gCAJA;AAKA;AALA,SAMA,IANA,CAMA;AACA;AACA;AACA,OATA;AAUA,KA1CA;AA2CA,4BA3CA,sCA2CA;AACA;AACA,gCADA;AAEA,qOAFA;AAMA;AANA;AAQA;AApDA;AA7CA,G;;;;;;;;;;;AClFA,yC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAA4C;AAC3E;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,4CAA4C,6BAA6B;AACzE;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAA6C;AAC5E;AACA,yCAAyC,8BAA8B;AACvE;AACA;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,yCAAyC,sBAAsB;AAC/D,sCAAsC,6BAA6B;AACnE;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AChMA;AACA;;IAEMA,Q;AACF,sBAAc;AAAA;;AAAA;;AACV,QAAIC,QAAQ,GAAG,KAAKC,KAAL,MAAgB,CAAhB,GAAoB,CAApB,GAAwB,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","file":"/js/game.js","sourcesContent":["<template>\n    <div\n        v-if=\"show\"\n        class=\"scene-html w-full h-full absolute t-0 l-0 flex justify-center items-center animate__animated animate__fadeIn\"\n    >\n        <div\n            class=\"flex items-center justify-center text-center rounded animate__animated animate__backInDown\"\n        >\n            <div v-if=\"toShow === 'initRoom'\" class=\"flex w-full\">\n                <div\n                    class=\"col-create-room flex flex-1 justify-center items-center flex-col\"\n                >\n                    <p class=\"text-gray-700 mb-2\">Create a room</p>\n                    <button\n                        @click=\"createRoom()\"\n                        class=\"bg-pink-700 px-4 py-2 text-white rounded\"\n                    >\n                        Create\n                    </button>\n                </div>\n                <div\n                    class=\"col-go-to-room flex flex-1 justify-center items-center flex-col\"\n                >\n                    <p class=\"text-gray-700 mb-2\">Go to a room</p>\n                    <ul>\n                        <li\n                            v-for=\"(code, i) in codes\"\n                            :key=\"i\"\n                            class=\"flex flex-col mx-1\"\n                        >\n                            <i\n                                @click=\"increaseNum(i)\"\n                                class=\"fa fa-plus\"\n                                aria-hidden=\"true\"\n                            ></i>\n                            <!-- <input type=\"text\" v-model=\"codes[i].val\" /> -->\n                            <span class=\"bg-gray-800\">{{ codes[i].val }}</span>\n                            <i\n                                @click=\"decreaseNum(i)\"\n                                class=\"fa fa-minus\"\n                                aria-hidden=\"true\"\n                            ></i>\n                        </li>\n                    </ul>\n                    <button\n                        @click=\"goToRoom()\"\n                        class=\"bg-blue-700 mt-1 px-4 py-2 text-white rounded\"\n                    >\n                        Go play\n                    </button>\n                    <div v-if=\"roomError\" class=\"room-error text-center mt-2\">\n                        <p class=\"text-red-600\">Invalid room code..</p>\n                        <p class=\"text-red-600 text-xs\">\n                            Try again with another code.\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div v-if=\"toShow === 'roomCode'\">\n                <p class=\"text-gray-700\">\n                    Your opponent can connect to this room code:\n                </p>\n                <ul class=\"room-generated flex justify-center my-3\">\n                    <li v-for=\"num in roomCode.split('')\" class=\"mx-1\">\n                        <span class=\"bg-gray-800\">{{ num }}</span>\n                    </li>\n                </ul>\n                <small class=\"text-green-600 mt-2\"\n                    >Waiting for opponent to connect...</small\n                >\n                <button\n                    @click=\"goBack()\"\n                    class=\"go-back bg-blue-700 block mx-auto mt-4 px-4 py-2 text-white rounded\"\n                >\n                    Go back\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'set-opponent',\n    data() {\n        return {\n            show: false,\n            toShow: 'initRoom',\n            codes: [{ val: 0 }, { val: 0 }, { val: 0 }, { val: 0 }],\n            roomCode: '0000',\n            roomError: false,\n        };\n    },\n    mounted() {\n        game.bus.$on('showSetOpponent', () => {\n            this.codes.map((code) => (code.val = 0));\n            this.toShow = 'initRoom';\n            this.show = true;\n        });\n\n        game.bus.$on('ShowMyRoomId', (roomCode) => {\n            this.roomCode = roomCode;\n            this.toShow = 'roomCode';\n        });\n\n        game.bus.$on('PrintInvalidRoom', () => {\n            this.roomError = true;\n            setTimeout(() => {\n                this.roomError = false;\n            }, 2000);\n        });\n\n        game.bus.$on(\n            'PrintOpponentDisconnected',\n            this.printOpponentDisonnected\n        );\n\n        game.bus.$on('StartRoom', (roomToStart) => {\n            if (roomToStart == this.roomCode) {\n                // This is the room initiator player\n                this.printOpponentConnected();\n            } else {\n                // This is the opponent\n                this.show = false;\n            }\n        });\n    },\n    methods: {\n        createRoom() {\n            game.scene.getScene('SetPlaneScene').socket.send({\n                action: 'getMyRoom',\n            });\n        },\n        goToRoom() {\n            if (this.roomError) return;\n            const roomToGo = this.codes.map((code) => code.val).join('');\n            if (roomToGo == this.roomCode) {\n                game.bus.$emit('PrintInvalidRoom');\n                return;\n            }\n\n            game.gameData.turn.setIsMyTurn(false);\n            game.scene.getScene('SetPlaneScene').socket.send({\n                action: 'goToRoom',\n                room: roomToGo,\n            });\n        },\n        increaseNum(key) {\n            if (this.codes[key].val >= 9) return;\n            this.codes[key].val++;\n        },\n        decreaseNum(key) {\n            if (this.codes[key].val <= 0) return;\n            this.codes[key].val--;\n        },\n        goBack() {\n            this.toShow = 'initRoom';\n        },\n        printOpponentConnected() {\n            Swal.fire({\n                title: \"Let's go!\",\n                text: 'Opponent connected',\n                icon: 'success',\n                showConfirmButton: false,\n                timer: 2000,\n            }).then(() => {\n                //console.log(\"execute then\");\n                this.show = false;\n            });\n        },\n        printOpponentDisonnected() {\n            Swal.fire({\n                showConfirmButton: false,\n                html: `<div class=\"no-opponent\">\n              <i class=\"fa fa-user-times text-red-700 mb-4\" aria-hidden=\"true\"></i>\n              <p class=\"text-gray-700\">Opponent has left the room..</p>    \n          </div>`,\n                timer: 2000,\n            });\n        },\n    },\n};\n</script>\n\n<style scoped lang=\"scss\">\nul {\n    &:not(.room-generated) {\n        display: inherit;\n    }\n\n    li {\n        span {\n            width: 36px;\n            height: 36px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: #eee;\n            border-radius: 2px;\n        }\n\n        i {\n            text-align: center;\n            // font-size: 40px;\n            // margin: -8px 0;\n            font-size: 23px;\n            margin: 3px 0;\n            cursor: pointer;\n            color: #2d3748;\n        }\n    }\n}\n</style>\n","// removed by extract-text-webpack-plugin","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.show\n    ? _c(\n        \"div\",\n        {\n          staticClass:\n            \"scene-html w-full h-full absolute t-0 l-0 flex justify-center items-center animate__animated animate__fadeIn\"\n        },\n        [\n          _c(\n            \"div\",\n            {\n              staticClass:\n                \"flex items-center justify-center text-center rounded animate__animated animate__backInDown\"\n            },\n            [\n              _vm.toShow === \"initRoom\"\n                ? _c(\"div\", { staticClass: \"flex w-full\" }, [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"col-create-room flex flex-1 justify-center items-center flex-col\"\n                      },\n                      [\n                        _c(\"p\", { staticClass: \"text-gray-700 mb-2\" }, [\n                          _vm._v(\"Create a room\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"bg-pink-700 px-4 py-2 text-white rounded\",\n                            on: {\n                              click: function($event) {\n                                return _vm.createRoom()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                    Create\\n                \"\n                            )\n                          ]\n                        )\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"col-go-to-room flex flex-1 justify-center items-center flex-col\"\n                      },\n                      [\n                        _c(\"p\", { staticClass: \"text-gray-700 mb-2\" }, [\n                          _vm._v(\"Go to a room\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"ul\",\n                          _vm._l(_vm.codes, function(code, i) {\n                            return _c(\n                              \"li\",\n                              { key: i, staticClass: \"flex flex-col mx-1\" },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-plus\",\n                                  attrs: { \"aria-hidden\": \"true\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.increaseNum(i)\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"span\", { staticClass: \"bg-gray-800\" }, [\n                                  _vm._v(_vm._s(_vm.codes[i].val))\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-minus\",\n                                  attrs: { \"aria-hidden\": \"true\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.decreaseNum(i)\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          }),\n                          0\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"bg-blue-700 mt-1 px-4 py-2 text-white rounded\",\n                            on: {\n                              click: function($event) {\n                                return _vm.goToRoom()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                    Go play\\n                \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _vm.roomError\n                          ? _c(\n                              \"div\",\n                              { staticClass: \"room-error text-center mt-2\" },\n                              [\n                                _c(\"p\", { staticClass: \"text-red-600\" }, [\n                                  _vm._v(\"Invalid room code..\")\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"p\",\n                                  { staticClass: \"text-red-600 text-xs\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                        Try again with another code.\\n                    \"\n                                    )\n                                  ]\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ]\n                    )\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.toShow === \"roomCode\"\n                ? _c(\"div\", [\n                    _c(\"p\", { staticClass: \"text-gray-700\" }, [\n                      _vm._v(\n                        \"\\n                Your opponent can connect to this room code:\\n            \"\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"ul\",\n                      {\n                        staticClass: \"room-generated flex justify-center my-3\"\n                      },\n                      _vm._l(_vm.roomCode.split(\"\"), function(num) {\n                        return _c(\"li\", { staticClass: \"mx-1\" }, [\n                          _c(\"span\", { staticClass: \"bg-gray-800\" }, [\n                            _vm._v(_vm._s(num))\n                          ])\n                        ])\n                      }),\n                      0\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"small\", { staticClass: \"text-green-600 mt-2\" }, [\n                      _vm._v(\"Waiting for opponent to connect...\")\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"go-back bg-blue-700 block mx-auto mt-4 px-4 py-2 text-white rounded\",\n                        on: {\n                          click: function($event) {\n                            return _vm.goBack()\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n                Go back\\n            \")]\n                    )\n                  ])\n                : _vm._e()\n            ]\n          )\n        ]\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Players from './components/Players';\nimport Turn from './components/Turn';\n\nclass GameData {\n    constructor() {\n        let imageNum = this.getId() == 1 ? 1 : 2;\n        //console.log(imageNum);\n        this.players = {\n            player: {\n                id: this.getId(),\n                name: 'User' + (this.getParameterByName('userId') ?? '1'),\n                photo: `assets/images/profile-${imageNum}.jpg`,\n            },\n        };\n\n        this.turn = new Turn();\n    }\n\n    // Called from Socket class\n    setOpponent(opponent) {\n        this.players.opponent = opponent;\n\n        const setPlaneScene = game.scene.getScene('SetPlaneScene');\n        setPlaneScene.playersComponent = new Players(setPlaneScene);\n    }\n\n    // helper for debugging\n    getId() {\n        return this.getParameterByName('userId') ?? 1;\n    }\n    getParameterByName(name, url = window.location.href) {\n        name = name.replace(/[\\[\\]]/g, '\\\\$&');\n        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    }\n}\n\nexport default GameData;\n","class Socket {\n    constructor() {\n        this.scene = game.scene.getScene('MainScene');\n        const queryString = $.param(game.gameData.players.player);\n        const url = `ws://192.168.0.105:8080/comm?${queryString}`;\n        const conn = new WebSocket(url);\n\n        conn.onopen = (e) => {\n            console.log(`Connection established to ${url}`);\n        };\n        this.conn = conn;\n        conn.onmessage = (e) => {\n            // console.log(e.data);\n            const msg = JSON.parse(e.data);\n            this.handleReceivedMessage(msg);\n        };\n\n        conn.onerror = () => {\n            Swal.fire({\n                title: 'Ouups!',\n                text:\n                    \"We can't connect to the server now. Please try again later.\",\n                icon: 'error',\n                showConfirmButton: false,\n            });\n        };\n    }\n\n    handleReceivedMessage(msg) {\n        if (!msg.action) return;\n        console.log(msg);\n\n        switch (msg.action) {\n            case 'setMyRoom':\n                //game.scene.getScene('SetOpponentScene').showMyRoomId(msg.room);\n                game.bus.$emit('ShowMyRoomId', msg.room);\n                game.gameData.turn.setIsMyTurn(true);\n                break;\n            case 'invalidRoom':\n                //game.scene.getScene('SetOpponentScene').printInvalidRoom();\n                game.bus.$emit('PrintInvalidRoom');\n                break;\n            case 'enterToRoom':\n                game.gameData.setOpponent(msg.opponent);\n                //game.scene.getScene('SetOpponentScene').startRoom(msg.room);\n                game.bus.$emit('StartRoom', msg.room);\n                break;\n            case 'opponentDisconnected':\n                this.doOpponentDisconnected(msg);\n                break;\n            case 'attack':\n                this.doAttack(msg);\n                game.gameData.turn.reverse();\n                break;\n            case 'setOpponentData':\n                this.doSetOpponentData(msg);\n                break;\n        }\n    }\n\n    doSetOpponentData(msg) {\n        this.scene.opponentData = msg.opponentData;\n    }\n\n    doAttack(msg) {\n        const cellId = msg.cellClicked;\n        if (!cellId) return;\n\n        let isHit = false;\n        const cellNum = cellId.replace('p', '');\n        const rect = this.scene.cells[cellId.replace('p', 'o')].rect;\n\n        game.gameData.turn.printAttackedText(cellNum);\n\n        Object.keys(this.scene.myPlanes).forEach((planeKey) => {\n            const currPlane = this.scene.myPlanes[planeKey].instance;\n            // console.log(currPlane);\n\n            if (currPlane.planeCells.includes(cellNum)) {\n                // Targeted point\n                const headHitted = cellNum == currPlane.headCell;\n                const texture = headHitted ? 'fire-cap' : 'fire';\n\n                this.scene.add\n                    .image(rect.centerX, rect.centerY, texture)\n                    .setScale(0.6 * game.zoom);\n\n                // Delete cell from plane cells\n                currPlane.planeCells.splice(\n                    currPlane.planeCells.indexOf(cellNum),\n                    1\n                );\n\n                // console.log(currPlane.planeCells.length);\n                if (currPlane.planeCells.length === 0) {\n                    console.log('full discovered plane');\n                }\n\n                isHit = true;\n            }\n        });\n\n        if (!isHit) {\n            // Missed point\n            this.scene.add\n                .image(rect.centerX, rect.centerY, 'x')\n                .setScale(0.4 * game.zoom);\n        }\n    }\n\n    doOpponentDisconnected(msg) {\n        console.log('opponent disconnected');\n        game.bus.$emit('PrintOpponentDisconnected');\n        this.scene.scene.start('SetPlaneScene');\n    }\n    // Used external\n    send(msg) {\n        if (this.conn.readyState === WebSocket.CLOSED) return;\n        return this.conn.send(JSON.stringify(msg));\n    }\n}\n\nexport default Socket;\n","class Background {\n    constructor(scene) {\n        this.scene = scene;\n        this.draw();\n    }\n\n    draw() {\n        const x = 0;\n        const y = 0;\n        const squareWidth = game.opts.cellSize;\n        const cellsNum = 26;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawSingleRect(\n                    x + j * squareWidth,\n                    y + i * squareWidth,\n                    squareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n    }\n\n    drawSingleRect(x, y, squareWidth, i, j) {\n        const rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n        const graphics = this.scene.add.graphics({\n            lineStyle: { width: 1 * game.zoom, color: 0xeeeeee },\n        });\n        graphics.strokeRectShape(rect);\n    }\n}\n\nexport default Background;\n","class Map {\n    constructor(scene, x, y, type = null, isMainScene = false) {\n        this.type = type;\n        this.scene = scene;\n        this.x = x * game.zoom;\n        this.y = y * game.zoom;\n        this.isMainScene = isMainScene;\n        this.attackedCells = [];\n\n        this.drawMap();\n    }\n\n    drawMap() {\n        const squareWidth = game.opts.cellSize;\n        const cellsNum = 10;\n\n        for (let i = 0; i < cellsNum; i++) {\n            // Go vertical\n            for (let j = 0; j < cellsNum; j++) {\n                // Go horizontal\n                this.drawRect(\n                    this.x + j * squareWidth,\n                    this.y + i * squareWidth,\n                    squareWidth,\n                    i,\n                    j\n                );\n            }\n        }\n\n        this.drawBorder(this.x, this.y, squareWidth, cellsNum);\n\n        // Draw coordinates\n        const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n        for (let i = 0; i < letters.length; i++) {\n            // Draw letters\n            const letter = letters[i].toUpperCase();\n            this.drawText(\n                letter,\n                this.x - game.opts.cellSize / 2,\n                this.y + game.opts.cellSize / 2 + game.opts.cellSize * i\n            );\n\n            // Draw numbers\n            this.drawText(\n                i + 1,\n                this.x + game.opts.cellSize / 2 + game.opts.cellSize * i,\n                this.y - game.opts.cellSize / 2\n            );\n        }\n    }\n\n    drawBorder(x, y, squareWidth, cellsNum) {\n        const width = squareWidth * cellsNum;\n        const rect = new Phaser.Geom.Rectangle(x, y, width, width);\n        const graphics = this.scene.add.graphics({\n            lineStyle: { width: 3 * game.zoom, color: 0x424242 },\n        });\n        graphics.strokeRectShape(rect);\n\n        this.scene.dropZoneRect = rect;\n    }\n\n    drawRect(x, y, squareWidth, i, j) {\n        const rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n        //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n        const graphics = this.scene.add.graphics({\n            lineStyle: { width: 1 * game.zoom, color: 0x424242 },\n        });\n        graphics.strokeRectShape(rect);\n\n        if (this.isMainScene) {\n            // Rect in MainScene\n            graphics.setInteractive(\n                new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth),\n                Phaser.Geom.Rectangle.Contains\n            );\n\n            const owner = this.type === 'opponent' ? 'p' : 'o';\n\n            const id = `${owner}${j + 1}${i + 1}`;\n            this.scene.cells[id] = { graphics, rect };\n\n            graphics.on('pointerdown', () => {\n                if (this.type !== 'opponent') return;\n\n                if ($.isEmptyObject(this.scene.opponentData)) {\n                    console.log('opponent not ready yet');\n                    return;\n                }\n\n                if (!this.scene.turn.isMyTurn) {\n                    //console.log('not my turn');\n                    game.gameData.turn.scaleText();\n                    return;\n                }\n\n                const cellNum = `${j + 1}${i + 1}`;\n\n                if (this.attackedCells.includes(cellNum)) {\n                    console.log('Already attacked this target');\n                    return;\n                }\n\n                this.scene.socket.send({\n                    action: 'attack',\n                    cellClicked: id,\n                });\n\n                let isHit = false;\n                const opponentPlanes = this.scene.opponentData.planes;\n\n                Object.keys(opponentPlanes).forEach((planeKey) => {\n                    const currPlane = opponentPlanes[planeKey];\n\n                    if (currPlane.cells.includes(cellNum)) {\n                        // Targeted point\n                        let gph = this.scene.add.graphics({\n                            fillStyle: { color: 0x800000 },\n                        });\n                        gph.fillRectShape(rect);\n\n                        const texture =\n                            cellNum == currPlane.head ? 'fire-cap' : 'fire';\n\n                        this.scene.add\n                            .image(rect.centerX, rect.centerY, texture)\n                            .setScale(0.6 * game.zoom);\n\n                        isHit = true;\n                    }\n                });\n\n                if (!isHit) {\n                    // Missed point\n                    this.scene.add\n                        .image(rect.centerX, rect.centerY, 'x')\n                        .setScale(0.4 * game.zoom);\n                }\n\n                this.attackedCells.push(cellNum);\n\n                setTimeout(() => {\n                    game.gameData.turn.reverse();\n                }, 2000);\n            });\n        } else {\n            // Rect in SetPlaneScene\n            const id = `${j + 1}${i + 1}`;\n            this.scene.cells[id] = { id, rect };\n        }\n    }\n\n    drawText(text, x, y) {\n        const fontSize = 16 * game.zoom;\n        this.scene.add\n            .text(x, y, text, {\n                color: '#424242',\n                fontFamily: 'Righteous',\n                // stroke: '#000',\n                // strokeThickness: 1,\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(0.5);\n        // .setDepth(4);\n    }\n}\n\nexport default Map;\n","class Plane extends Phaser.GameObjects.Sprite {\n    constructor(config) {\n        super(\n            config.scene,\n            config.x * game.zoom,\n            config.y * game.zoom,\n            `plane-${config.planeNum}`\n        );\n\n        config.scene.add.existing(this);\n\n        this.scene = config.scene;\n\n        this.setScale(0.4)\n            .setInteractive()\n            .setData('initialPos', {\n                x: this.x,\n                y: this.y,\n            });\n\n        this.setInteractive();\n        this.scene.input.setDraggable(this);\n        this.scene.input.on('dragstart', this.dragStart, this);\n        this.scene.input.on('dragend', this.dragEnd, this);\n        this.scene.input.on('drag', this.drag, this);\n\n        // Other variables\n        //this.dragObj = null;\n        this.planeName = `plane${config.planeNum}`;\n        this.stablePos = [\n            {\n                x: this.x,\n                y: this.y,\n            },\n        ];\n        this.planeCells = [];\n        this.isInDropZone = false;\n        this.firstClickTime = 0;\n    }\n\n    /**\n     *  Drag & drop logic\n     */\n\n    dragStart(pointer, gameObject) {\n        if (gameObject !== this) return;\n        this.moveToFront();\n        // console.log('start  drag');\n    }\n\n    drag(pointer, gameObject, dragX, dragY) {\n        if (gameObject !== this) return;\n        //console.log('drag');\n        gameObject.x = dragX;\n        gameObject.y = dragY;\n\n        this.scaleOnDrag(pointer);\n    }\n\n    dragEnd(pointer, gameObject) {\n        if (gameObject !== this) return;\n        // console.log('end drag');\n        this.checkDoubleTap(pointer);\n        this.checkIfInDropZone();\n    }\n\n    /**\n     * Visual actions\n     */\n    checkIfInDropZone() {\n        const dropZone = this.getDropZone();\n\n        if (\n            this.x > dropZone.x &&\n            this.x < dropZone.x + dropZone.width &&\n            this.y > dropZone.y &&\n            this.y < dropZone.y + dropZone.height\n        ) {\n            // Inside drop zone\n            this.setScale(1);\n\n            this.repositionToClosest('x');\n            this.repositionToClosest('y');\n\n            this.setPlaneCells();\n\n            this.isInDropZone = true;\n        } else {\n            // Outside drop zone / Go back to initial position\n            this.goToInitialPosition();\n            this.isInDropZone = false;\n        }\n    }\n\n    repositionToClosest(axis) {\n        let isVertical = this.angle === 90 || this.angle === -90;\n\n        if (isVertical) {\n            this.repositionVertical(axis);\n        } else {\n            this.repositionHorizontal(axis);\n        }\n\n        // console.log(isVertical);\n    }\n\n    repositionHorizontal(axis) {\n        let dropZone = this.getDropZone();\n\n        for (let i = 0; i < 10; i++) {\n            if (i < 2) continue;\n\n            let closest = i * game.opts.cellSize;\n            let relativeDistance = this[axis] - dropZone[axis];\n\n            if (axis === 'y') {\n                relativeDistance = relativeDistance + game.opts.cellSize / 2;\n            }\n\n            if (relativeDistance - closest < game.opts.cellSize - 1) {\n                // Horizontal plane\n                let newPos =\n                    closest +\n                    dropZone[axis] +\n                    (axis === 'x' ? game.opts.cellSize / 2 : 0);\n\n                if (i > 7) {\n                    // this.dragObj[axis] =\n                    //     5 * 40 + dropZone[axis] + (axis === 'x' ? 20 : 0);\n                    if (axis === 'x') {\n                        this.x =\n                            7 * game.opts.cellSize +\n                            dropZone.x +\n                            game.opts.cellSize / 2;\n                    } else {\n                        this.y = 8 * game.opts.cellSize + dropZone.y;\n                    }\n                } else {\n                    this[axis] = newPos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    repositionVertical(axis) {\n        let dropZone = this.getDropZone();\n\n        for (let i = 0; i < 11; i++) {\n            if (i < 2) continue;\n\n            let closest = i * game.opts.cellSize;\n            let relativeDistance = this[axis] - dropZone[axis];\n\n            if (axis === 'x') {\n                relativeDistance = relativeDistance + game.opts.cellSize / 2;\n            }\n\n            if (relativeDistance - closest < game.opts.cellSize - 1) {\n                // Horizontal plane\n                let newPos =\n                    closest +\n                    dropZone[axis] +\n                    (axis === 'y' ? game.opts.cellSize / 2 : 0);\n\n                if (i > 7) {\n                    // this.dragObj[axis] =\n                    //     5 * 40 + dropZone[axis] + (axis === 'x' ? 20 : 0);\n                    if (axis === 'x') {\n                        this.x = 8 * game.opts.cellSize + dropZone.x;\n                        //console.log('aici 1');\n                    } else {\n                        this.y =\n                            8 * game.opts.cellSize +\n                            dropZone.x -\n                            game.opts.cellSize / 2;\n                        ///console.log('aici 2');\n                    }\n                } else {\n                    this[axis] = newPos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    goToInitialPosition() {\n        this.scene.tweens.add({\n            targets: [this],\n            x: this.getData('initialPos').x,\n            y: this.getData('initialPos').y,\n            scaleX: game.zoom * 0.4,\n            scaleY: game.zoom * 0.4,\n            duration: 500,\n        });\n\n        // console.log(this.scene.planes);\n        delete this.scene.planes[this.planeName];\n        // console.log(this.scene.planes);\n    }\n\n    scaleOnDrag(pointer) {\n        if (pointer.x < this.getData('initialPos').x) {\n            if (this.isInDropZone) {\n                this.setScale(1.1);\n            } else {\n                this.setScaleNoZoom((game.config.width - this.x) / 450);\n            }\n        }\n    }\n\n    moveToFront() {\n        const objects = this.scene.planesGameObjects;\n        objects.forEach((planeGameObject) => {\n            if (this === planeGameObject) {\n                objects.splice(objects.indexOf(this), 1);\n                objects.push(this);\n            }\n        });\n        objects.forEach((planeGameObject) => {\n            planeGameObject.setDepth(objects.indexOf(planeGameObject));\n        });\n    }\n\n    /**\n     *  Calculations and settings\n     */\n    setPlaneCells() {\n        let headCellId;\n        let planeData = this.getPlanePositionData();\n        let headPoint = planeData.headPoint;\n\n        //console.log(planeData);\n\n        this.scene.cells.forEach((cell) => {\n            if (\n                cell.rect.centerX === headPoint.x &&\n                cell.rect.centerY === headPoint.y\n            ) {\n                headCellId = cell.id;\n            }\n        });\n\n        if (!headCellId) {\n            this.goToInitialPosition();\n            return;\n        }\n\n        let headCords = headCellId.split('').map((num) => parseInt(num));\n        headCords = { x: headCords[0], y: headCords[1] };\n\n        let planeCells = [];\n\n        let schema = planeData.schema;\n\n        let originX = headCords.x + planeData.diff.x;\n        let originY = headCords.y + planeData.diff.y;\n\n        for (let i = 0; i < schema.length; i++) {\n            const line = schema[i];\n            //console.log('line', i);\n\n            for (let j = 0; j < line.length; j++) {\n                const cellPlaceholder = line[j];\n\n                if (cellPlaceholder) {\n                    planeCells.push(`${originX + j}${originY + i}`);\n                }\n\n                //console.log(`${i + 1}${j + 1}`);\n            }\n        }\n\n        // console.log(planeCells);\n        this.planeCells = planeCells;\n        this.headCell = headCellId;\n\n        // Push current plane to planes object\n        const currPlaneExists = Object.keys(this.scene.planes).includes(\n            this.planeName\n        );\n\n        if (!currPlaneExists) {\n            this.scene.planes[this.planeName] = {\n                cells: planeCells,\n                instance: this,\n            };\n        } else {\n            this.scene.planes[this.planeName].cells = planeCells;\n        }\n\n        // Check for overlap\n        let isOverlapping = this.checkOverlap();\n        //console.log(isOverlapping, this.planeName);\n        if (!isOverlapping) {\n            this.stablePos.push({\n                x: this.x,\n                y: this.y,\n            });\n\n            if (this.stablePos.length > 1) {\n                this.stablePos.shift();\n            }\n        }\n\n        //localStorage.setItem('lastPlaceCells', planeCells.join(','));\n    }\n\n    checkOverlap() {\n        let keys = Object.keys(this.scene.planes);\n        if (keys.length < 2) return false;\n\n        let otherPlaneCells;\n\n        keys.forEach((planeKey) => {\n            if (planeKey !== this.planeName) {\n                otherPlaneCells = this.scene.planes[planeKey].cells;\n            }\n        });\n\n        let overlap = false;\n\n        for (let i = 0; i < this.planeCells.length; i++) {\n            if (otherPlaneCells.includes(this.planeCells[i])) {\n                //console.log('overlap');\n\n                // Reposition plane back to last stable positio\n                if (\n                    this.stablePos[0].x === this.getData('initialPos').x &&\n                    this.stablePos[0].y === this.getData('initialPos').y\n                ) {\n                    this.goToInitialPosition();\n\n                    //console.log('overl init');\n                } else {\n                    this.x = this.stablePos[0].x;\n                    this.y = this.stablePos[0].y;\n                    // console.log('overl afetr');\n                }\n\n                // console.log(this.planeCells[i]);\n\n                overlap = true;\n                break;\n            }\n        }\n\n        return overlap;\n    }\n\n    getDropZone() {\n        let { x, y, width, height } = this.scene.dropZoneRect;\n        return { x, y, width, height };\n    }\n\n    getPlanePositionData() {\n        let schema;\n        let headPoint;\n        let diff; // Compute start point difference\n        // It is distance in cells from plane head\n        // to plane margin (top/left 0)\n\n        switch (this.angle) {\n            case 90:\n                headPoint = {\n                    x:\n                        this.x +\n                        (this.height * game.zoom) / 2 -\n                        game.opts.cellSize / 2,\n                    y: this.y,\n                };\n                schema = [\n                    [0, 0, 1, 0],\n                    [1, 0, 1, 0],\n                    [1, 1, 1, 1],\n                    [1, 0, 1, 0],\n                    [0, 0, 1, 0],\n                ];\n                diff = {\n                    x: -3,\n                    y: -2,\n                };\n                break;\n            case -180:\n                headPoint = {\n                    x: this.x,\n                    y:\n                        this.y +\n                        (this.height * game.zoom) / 2 -\n                        game.opts.cellSize / 2,\n                };\n                schema = [\n                    [0, 1, 1, 1, 0],\n                    [0, 0, 1, 0, 0],\n                    [1, 1, 1, 1, 1],\n                    [0, 0, 1, 0, 0],\n                ];\n                diff = {\n                    x: -2,\n                    y: -3,\n                };\n                break;\n            case -90:\n                headPoint = {\n                    x:\n                        this.x -\n                        (this.height * game.zoom) / 2 +\n                        game.opts.cellSize / 2,\n                    y: this.y,\n                };\n                schema = [\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 1],\n                    [1, 1, 1, 1],\n                    [0, 1, 0, 1],\n                    [0, 1, 0, 0],\n                ];\n                diff = {\n                    x: 0,\n                    y: -2,\n                };\n                break;\n\n            default:\n                headPoint = {\n                    x: this.x,\n                    y:\n                        this.y -\n                        (this.height * game.zoom) / 2 +\n                        game.opts.cellSize / 2,\n                };\n                schema = [\n                    [0, 0, 1, 0, 0],\n                    [1, 1, 1, 1, 1],\n                    [0, 0, 1, 0, 0],\n                    [0, 1, 1, 1, 0],\n                ];\n                diff = {\n                    x: -2,\n                    y: 0,\n                };\n        }\n\n        return { schema, headPoint, diff };\n    }\n\n    /**\n     * Double tap check\n     */\n    checkDoubleTap() {\n        if (!this.lastClickTime) {\n            this.lastClickTime = this.scene.time.now;\n            return;\n        }\n        const clickDelay = this.scene.time.now - this.lastClickTime;\n        this.lastClickTime = this.scene.time.now;\n        if (clickDelay < 350) {\n            this.angle += 90;\n            // this.repositionToClosest('x');\n            // this.repositionToClosest('y');\n        }\n    }\n\n    /**\n     * Override inherited methods\n     */\n    setScale(scale) {\n        super.setScale(scale * game.zoom);\n        return this;\n    }\n\n    setScaleNoZoom(scale) {\n        super.setScale(scale);\n        return this;\n    }\n}\n\nexport default Plane;\n","class Players {\n    constructor(scene) {\n        this.scene = scene;\n        this.player = game.gameData.players.player;\n        this.opponent = game.gameData.players.opponent;\n\n        this.printBackground();\n        this.printPlayer();\n        this.loadOpponent();\n    }\n\n    printBackground() {\n        const rect = new Phaser.Geom.Rectangle(\n            0,\n            0,\n            game.config.width,\n            66 * game.zoom\n        );\n        const graphics = this.scene.add.graphics();\n        graphics.fillStyle(0x000000, 0.6);\n        graphics.fillRectShape(rect);\n    }\n\n    loadOpponent() {\n        if (this.scene.textures.exists(`opponent-${this.opponent.id}`)) {\n            this.printOpponent();\n            return;\n        }\n\n        this.scene.load.image(\n            `opponent-${this.opponent.id}`,\n            this.opponent.photo\n        );\n        this.scene.load.on('complete', this.printOpponent, this);\n        this.scene.load.start();\n    }\n\n    printPlayer() {\n        this.printPlayerPhoto('player', 30, 10);\n        this.printPlayerName(this.player.name, 90, 50, 0);\n    }\n\n    printOpponent() {\n        this.printPlayerPhoto(\n            `opponent-${this.opponent.id}`,\n            game.opts.defaultWidth - 80,\n            10\n        );\n        this.printPlayerName(\n            this.opponent.name,\n            game.opts.defaultWidth - 90,\n            50\n        );\n    }\n\n    printPlayerPhoto(key, x, y) {\n        const width = 50 * game.zoom;\n        const height = width;\n\n        x = x * game.zoom;\n        y = y * game.zoom;\n\n        // Create mask\n        const shape = this.scene.add.graphics();\n        shape.fillStyle(0x000000, 1);\n        shape.fillRoundedRect(x, y, width, height, 6 * game.zoom);\n        const mask = shape.createGeometryMask();\n\n        // Add player image\n        const img = this.scene.add\n            .image(x, y, key)\n            .setDepth(4)\n            .setMask(mask)\n            .setOrigin(0);\n\n        img.displayWidth = width;\n        img.displayHeight = height;\n    }\n\n    printPlayerName(name, x, y, originX = 1) {\n        const fontSize = 20 * game.zoom;\n        this.scene.add\n            .text(x * game.zoom, y * game.zoom, name, {\n                color: '#fff',\n                fontFamily: 'Righteous',\n                stroke: 'rgba(0,0,0,.6)',\n                strokeThickness: 1,\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(originX, 0.5)\n            .setDepth(4);\n    }\n}\n\nexport default Players;\n","class Turn {\n    constructor() {\n        this.text = null;\n        this.isMyTurn = false; // used in Mainscene to allow/disallow clicking on cells\n    }\n\n    setScene(scene) {\n        this.scene = scene;\n        this.printTurnText();\n        this.updateTurnText();\n    }\n\n    setIsMyTurn(bool) {\n        this.isMyTurn = bool;\n    }\n\n    reverse() {\n        this.isMyTurn = !this.isMyTurn;\n        this.updateTurnText();\n    }\n\n    getTurnText() {\n        return this.isMyTurn ? 'Your turn' : 'Opponent turn. Please wait..';\n    }\n\n    printTurnText() {\n        const fontSize = 16 * game.zoom;\n        this.text = this.scene.add\n            .text(game.config.width / 2, 36 * game.zoom, this.getTurnText(), {\n                color: '#fff',\n                fontFamily: 'Righteous',\n                stroke: 'rgba(0,0,0,.6)',\n                strokeThickness: 1,\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(0.5)\n            .setDepth(4);\n    }\n\n    printAttackedText(cellNum) {\n        const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n        const splitted = cellNum.split('');\n        const point = letters[splitted[1] - 1].toUpperCase() + splitted[0];\n        this.text.setText(`Opponent attacked ${point}`).setColor('#fff');\n        const tween = this.scene.tweens.add({\n            targets: [this.text],\n            scaleX: 1.5,\n            scaleY: 1.5,\n            duration: 400,\n            yoyo: true,\n            onComplete: () => {\n                //   this.text.setColor('#fff').setScale(1);\n            },\n        });\n    }\n\n    updateTurnText() {\n        setTimeout(() => {\n            const color = this.isMyTurn ? '#0a9c00' : '#f79e0f';\n            this.text.setText(this.getTurnText()).setColor(color);\n\n            const tween = this.scene.tweens.add({\n                targets: [this.text],\n                scaleX: 1.5,\n                scaleY: 1.5,\n                duration: 400,\n                yoyo: true,\n                onComplete: () => {\n                    this.text.setColor('#fff').setScale(1);\n                },\n            });\n        }, 400);\n    }\n\n    scaleText() {\n        this.text.setText(this.getTurnText()).setColor('#ff0000');\n        const tween = this.scene.tweens.add({\n            targets: [this.text],\n            scaleX: 1.5,\n            scaleY: 1.5,\n            duration: 400,\n            yoyo: true,\n            onComplete: () => {\n                this.text.setColor('#fff').setScale(1);\n            },\n        });\n    }\n}\n\nexport default Turn;\n","import Vue from 'vue';\nimport Phaser from 'phaser';\nimport Swal from 'sweetalert2';\nimport Helpers from './helpers';\n\nwindow.Swal = Swal;\nwindow.jQuery = window.$ = require('jquery');\n// window.axios = require('axios');\n// window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\nimport LoadScene from './scenes/LoadScene';\nimport MainScene from './scenes/MainScene';\nimport StartScene from './scenes/StartScene';\nimport SetPlaneScene from './scenes/SetPlaneScene';\n//import SetOpponentScene from './scenes/SetOpponentScene';\n\nimport SetOpponent from './vue-components/SetOpponent.vue';\n\nconst zoom = Helpers.getDevicePixelRatio();\n\nconst config = {\n    type: Phaser.AUTO,\n    width: 800 * zoom,\n    height: 458 * zoom,\n    parent: 'game',\n    title: 'The Airplanes with Friends',\n    version: '0.1.0',\n    url: '',\n};\n\nconst game = new Phaser.Game(config);\n\ngame.zoom = zoom;\ngame.opts = {\n    cellSize: 32 * zoom,\n    defaultWidth: 800,\n    defaultHeight: 458,\n};\ngame.bus = new Vue();\n\ngame.scene.add('LoadScene', new LoadScene());\ngame.scene.add('MainScene', new MainScene());\ngame.scene.add('StartScene', new StartScene());\ngame.scene.add('SetPlaneScene', new SetPlaneScene());\n//game.scene.add('SetOpponentScene', new SetOpponentScene());\ngame.scene.start('LoadScene');\n\nwindow.game = game;\n\nnew Vue({\n    render: (h) => h(SetOpponent),\n}).$mount('#game div');\n","export default {\n    getDevicePixelRatio() {\n        let mediaQuery;\n        let is_firefox =\n            navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n        if (window.devicePixelRatio !== undefined && !is_firefox) {\n            return window.devicePixelRatio;\n        } else if (window.matchMedia) {\n            mediaQuery =\n                '(-webkit-min-device-pixel-ratio: 1.5),\\\n              (min--moz-device-pixel-ratio: 1.5),\\\n              (-o-min-device-pixel-ratio: 3/2),\\\n              (min-resolution: 1.5dppx)';\n            if (window.matchMedia(mediaQuery).matches) {\n                return 1.5;\n            }\n            mediaQuery =\n                '(-webkit-min-device-pixel-ratio: 2),\\\n              (min--moz-device-pixel-ratio: 2),\\\n              (-o-min-device-pixel-ratio: 2/1),\\\n              (min-resolution: 2dppx)';\n            if (window.matchMedia(mediaQuery).matches) {\n                return 2;\n            }\n            mediaQuery =\n                '(-webkit-min-device-pixel-ratio: 0.75),\\\n              (min--moz-device-pixel-ratio: 0.75),\\\n              (-o-min-device-pixel-ratio: 3/4),\\\n              (min-resolution: 0.75dppx)';\n            if (window.matchMedia(mediaQuery).matches) {\n                return 0.7;\n            }\n        } else {\n            return 1;\n        }\n    },\n};\n","import GameData from '../GameData';\nimport Background from '../components/Background';\n\nclass LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'LoadScene',\n        });\n    }\n\n    init() {\n        game.gameData = new GameData();\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    preload() {\n        /**\n         * LoadScene images\n         */\n\n        // this.load.multiatlas(\n        //     'atlas',\n        //     'assets/sprites/tp/atlas.json',\n        //     'assets/sprites/tp'\n        // );\n\n        this.load.image('player', game.gameData.players.player.photo);\n\n        this.load.image('play-btn', 'assets/images/play-btn.png');\n        this.load.image('btn-start-game', 'assets/images/btn-start-game.png');\n\n        this.load.image('x', 'assets/images/x.png');\n        this.load.image('fire', 'assets/images/fire.png');\n        this.load.image('fire-cap', 'assets/images/fire-cap.png');\n\n        this.load.image('plane-1', 'assets/images/planes/plane-1.png');\n        this.load.image('plane-2', 'assets/images/planes/plane-2.png');\n\n        // // Testing load scene\n        // for (let i = 0; i < 500; i++) {\n        //     this.load.image('plane-' + i, 'assets/images/planes/plane-2.png');\n        // }\n\n        this.showPreloader();\n    }\n\n    showPreloader() {\n        let scene = this;\n\n        let bg = new Background(scene);\n\n        let fontStyle = {\n            fontFamily: 'Righteous',\n            fontSize: 28 * game.zoom,\n            color: '#2d3748',\n            stroke: '#fff',\n            strokeThickness: 2,\n            shadow: {\n                offsetX: 1,\n                offsetY: 1,\n                color: '#fff',\n                blur: 0,\n                stroke: true,\n                fill: true,\n            },\n        };\n\n        let progressBar = scene.add.graphics();\n        let progressBox = scene.add.graphics();\n        progressBox.fillStyle(0x222222, 0.05);\n        progressBox.fillRect(\n            (game.config.width - 250 * game.zoom) / 2,\n            game.config.height / 2 + 40 * game.zoom,\n            250 * game.zoom,\n            50 * game.zoom\n        );\n\n        let width = scene.cameras.main.width;\n        let height = scene.cameras.main.height;\n        let loadingText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 50 * game.zoom,\n            text: 'Loading...',\n            style: fontStyle,\n        });\n        loadingText.setOrigin(0.5, 0.5);\n\n        let percentText = scene.make.text({\n            x: width / 2,\n            y: height / 2 - 5 * game.zoom,\n            text: '0%',\n            style: fontStyle,\n        });\n        percentText.setOrigin(0.5, 0.5);\n\n        scene.load.on('progress', (value) => {\n            percentText.setText(parseInt(value * 100) + '%');\n            progressBar.clear();\n            // progressBar.fillStyle(0xbf4689, 1);\n            progressBar.fillStyle(0x2d3748, 1);\n            progressBar.fillRect(\n                (game.config.width - 250 * game.zoom) / 2 + 5 * game.zoom,\n                game.config.height / 2 + 50 * game.zoom,\n                240 * value * game.zoom,\n                30 * game.zoom\n            );\n        });\n\n        scene.load.on('complete', () => {\n            // console.log('preload done')\n\n            progressBar.destroy();\n            progressBox.destroy();\n            loadingText.destroy();\n            percentText.destroy();\n\n            //game.scene.start('Start');\n            this.scene.stop();\n            game.scene.start('SetPlaneScene');\n        });\n    }\n}\n\nexport default LoadScene;\n","// import Socket from '../Socket';\nimport Map from '../components/Map';\nimport Players from '../components/Players';\nimport Background from '../components/Background';\n\nclass MainScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'MainScene',\n        });\n\n        this.cells = {};\n        this.opponentData = {}; // it is set on Socket class when msg is received from opponent\n    }\n\n    init(data) {\n        //this.myPlanesCells = data.planesData.cells;\n        this.myPlanes = data.planesData.planes;\n        console.log(this.myPlanes);\n        // console.log('heads', this.myPlanesCells[0], this.myPlanesCells[10]);\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    //debug\n    // drawByCells(cells) {\n    //     //console.log(this.cells);\n\n    //     cells.forEach((cl) => {\n    //         //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //         var graphics = this.add.graphics({\n    //             lineStyle: { width: 3, color: 0x000000 },\n    //         });\n    //         graphics.strokeRectShape(this.cells[`o${cl}`].rect);\n    //     });\n    // }\n\n    create() {\n        // console.log('main create');\n\n        const background = new Background(this);\n        const playersComponent = new Players(this);\n\n        const playerMap = new Map(this, 96 - 32, 98, null, true);\n        const opponentMap = new Map(this, 96 + 32 * 11, 98, 'opponent', true);\n\n        // Extract neccesarry data to send as opponent data\n        const dataToSend = { planes: {} };\n        Object.keys(this.myPlanes).forEach((planeKey) => {\n            const currPlane = this.myPlanes[planeKey];\n            // console.log(currPlane);\n            dataToSend.planes[planeKey] = {\n                cells: currPlane.instance.planeCells,\n                head: currPlane.instance.headCell,\n            };\n        });\n\n        // this.socket.send({\n        //     action: 'setOpponentData',\n        //     opponentData: {\n        //         planesCells: this.myPlanesCells,\n        //     },\n        // });\n\n        // Send data to opponent\n        this.socket.send({\n            action: 'setOpponentData',\n            opponentData: dataToSend,\n        });\n\n        this.drawPlanes();\n\n        this.turn = game.gameData.turn;\n        this.turn.setScene(this);\n\n        this.printTerritoryText();\n\n        //console.log(this.turn);\n\n        //debug\n\n        // this.drawByCells(this.myPlanesCells);\n    }\n\n    drawPlanes() {\n        // console.log(this.myPlanes);\n        Object.keys(this.myPlanes).forEach((planeKey) => {\n            const playerMapLeftDiff = game.opts.cellSize; // Difference between left margin of maps                                               // on SetPlaneScene and MainScene\n            const plane = this.myPlanes[planeKey].instance;\n            const planeImage = this.add\n                .image(plane.x - playerMapLeftDiff, plane.y, plane.texture.key)\n                .setAngle(plane.angle)\n                .setAlpha(0.9)\n                .setScale(game.zoom);\n        });\n    }\n\n    printTerritoryText() {\n        const gameWidth = game.opts.defaultWidth;\n        const x1 = gameWidth / 4 + (game.opts.cellSize / 2) * game.zoom;\n        const x2 = gameWidth - gameWidth / 4;\n        const y = game.opts.defaultHeight - 20;\n        this.printText(x1, y, 'Your territory');\n        this.printText(x2, y, 'Opponent territory');\n    }\n\n    printText(x, y, text) {\n        x = x * game.zoom;\n        y = y * game.zoom;\n        const fontSize = 14 * game.zoom;\n        this.add\n            .text(x, y, text, {\n                color: '#424242',\n                fontFamily: 'Righteous',\n                // stroke: '#000',\n                // strokeThickness: 1,\n                fontSize: `${fontSize}px`,\n            })\n            .setOrigin(0.5)\n            .setAlpha(0.7);\n    }\n}\n\nexport default MainScene;\n","import Background from '../components/Background';\nimport Map from '../components/Map';\nimport Players from '../components/Players';\nimport Plane from '../components/Plane';\nimport Socket from '../Socket';\n\nclass SetPlaneScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'SetPlaneScene',\n            physics: {\n                arcade: {\n                    //debug: true,\n                },\n            },\n        });\n\n        //this.cellSize = 40;\n        // this.cells = [];\n\n        // this.planes = {};\n        // this.planesGameObjects = [];\n    }\n\n    init() {\n        this.cameras.main.setBackgroundColor('#fff');\n    }\n\n    create() {\n        this.cells = [];\n        this.planes = {};\n        this.planesGameObjects = [];\n\n        // this.drawSceneBackground();\n        const background = new Background(this);\n\n        // // Setup players\n        //this.players = new Players(this);\n\n        // const x = 120;\n        // const y = 80;\n        // this.drawPlayerMap(x, y);\n        const map = new Map(this, 96, 98);\n\n        //this.plane = new Plane(this);\n        let plane1 = new Plane({\n            scene: this,\n            x: game.config.width / game.zoom / 2 + 200,\n            y: 140,\n            planeNum: 1,\n        });\n\n        this.planesGameObjects.push(plane1);\n\n        let plane2 = new Plane({\n            scene: this,\n            x: game.config.width / game.zoom / 2 + 300,\n            y: 140,\n            planeNum: 2,\n        });\n\n        this.planesGameObjects.push(plane2);\n\n        // Start game btn\n        this.addStartGame();\n\n        let mainScene = game.scene.getScene('MainScene');\n        // mainScene.players = new Players(mainScene);\n\n        // ---\n        this.socket = new Socket();\n        mainScene.socket = this.socket;\n        // ---\n\n        // Set opponent screen\n        // this.scene.stop();\n\n        //new Players(this);\n\n        // ---\n        this.scene\n            .launch('StartScene', {\n                setPlaneScene: this,\n            })\n            .bringToTop('StartScene');\n        // ---\n\n        //\n        //\n        ///\n        // this.scene.launch('SetOpponentScene', {\n        //     setPlaneScene: this,\n        // });\n\n        // setTimeout(() => {\n        //     this.scene.stop('SetOpponentScene');\n        //     this.scene.resume();\n        // }, 4000);\n\n        //debug\n        window.socket = this.socket;\n        window.SetPlaneScene = this;\n\n        // let cls = localStorage.getItem('lastPlaceCells').split(',');\n        // this.drawByCells(cls);\n    }\n\n    addStartGame() {\n        this.add\n            .image(630 * game.zoom, 384 * game.zoom, 'btn-start-game')\n            .setScale(game.zoom)\n            .setInteractive({ useHandCursor: true })\n            .on('pointerup', () => {\n                //// let heads = [];\n                //let allPlanesCells = [];\n\n                let keys = Object.keys(this.planes);\n                let keysLength = keys.length;\n\n                if (keysLength < 2) {\n                    // add 2 planes\n                    console.log('Add 2 planes to map');\n                    return;\n                }\n\n                // for (let i = 0; i < keysLength; i++) {\n                //     //heads.push(this.planes[keys[i]].cells[0]);\n                //     allPlanesCells = [\n                //         ...allPlanesCells,\n                //         ...this.planes[keys[i]].cells,\n                //     ];\n                // }\n\n                //console.log(this.planes);\n\n                this.scene.stop();\n                this.scene.start('MainScene', {\n                    planesData: {\n                        //cells: allPlanesCells,\n                        planes: this.planes,\n                    },\n                });\n            });\n    }\n\n    // debug\n    drawByCells(cells) {\n        cells.forEach((cl) => {\n            //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n            var graphics = this.add.graphics({\n                lineStyle: { width: 3, color: 0x000000 },\n            });\n            graphics.strokeRectShape(this.cells[cl].rect);\n        });\n    }\n\n    // drawPlayerMap(x, y) {\n    //     const squareWidth = this.cellSize;\n    //     const cellsNum = 8;\n\n    //     for (let i = 0; i < cellsNum; i++) {\n    //         // Go vertical\n    //         for (let j = 0; j < cellsNum; j++) {\n    //             // Go horizontal\n    //             this.drawRect(\n    //                 x + j * squareWidth,\n    //                 y + i * squareWidth,\n    //                 squareWidth,\n    //                 i,\n    //                 j\n    //             );\n    //         }\n    //     }\n\n    //     this.drawBorder(x, y, squareWidth, cellsNum);\n    // }\n\n    // drawBorder(x, y, squareWidth, cellsNum) {\n    //     let width = squareWidth * cellsNum;\n    //     let rect = new Phaser.Geom.Rectangle(x, y, width, width);\n    //     //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //     let graphics = this.add.graphics({\n    //         lineStyle: { width: 3, color: 0x000000 },\n    //     });\n    //     graphics.strokeRectShape(rect);\n\n    //     this.dropZoneRect = rect;\n    // }\n\n    // drawRect(x, y, squareWidth, i, j, type) {\n    //     let rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n    //     //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //     let graphics = this.add.graphics({\n    //         lineStyle: { width: 1, color: 0x000000 },\n    //     });\n    //     graphics.strokeRectShape(rect);\n\n    //     const id = `${j + 1}${i + 1}`;\n\n    //     this.cells[id] = { id, rect };\n    // }\n\n    // drawSceneBackground() {\n    //     const x = 0;\n    //     const y = 0;\n    //     const squareWidth = this.cellSize;\n    //     const cellsNum = 20;\n\n    //     for (let i = 0; i < cellsNum; i++) {\n    //         // Go vertical\n    //         for (let j = 0; j < cellsNum; j++) {\n    //             // Go horizontal\n    //             this.drawBgRect(\n    //                 x + j * squareWidth,\n    //                 y + i * squareWidth,\n    //                 squareWidth,\n    //                 i,\n    //                 j\n    //             );\n    //         }\n    //     }\n    // }\n\n    // drawBgRect(x, y, squareWidth, i, j) {\n    //     let rect = new Phaser.Geom.Rectangle(x, y, squareWidth, squareWidth);\n    //     //   let graphics = this.add.graphics({ fillStyle: { color: 0x0000ff } });\n    //     var graphics = this.add.graphics({\n    //         lineStyle: { width: 1, color: 0xeeeeee },\n    //     });\n    //     graphics.strokeRectShape(rect);\n    // }\n}\n\nexport default SetPlaneScene;\n","class StartScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'StartScene',\n        });\n    }\n\n    init(data) {\n        this.setPlaneScene = data.setPlaneScene;\n    }\n\n    create() {\n        const rect = new Phaser.Geom.Rectangle(\n            0,\n            0,\n            game.config.width,\n            game.config.height\n        );\n        const graphics = this.add.graphics();\n        graphics.fillStyle(0x000000, 0.8);\n        graphics.fillRectShape(rect);\n\n        const playBtn = this.add\n            .image(game.config.width / 2, game.config.height / 2, 'play-btn')\n            .setScale(game.zoom * 0.5)\n            .setAlpha(0.7)\n            .setInteractive({ useHandCursor: true })\n            .on('pointerdown', this.start, this);\n\n        this.tweens.add({\n            targets: [playBtn],\n            scaleX: 0.6,\n            scaleY: 0.6,\n            alpha: 1,\n            duration: 1000,\n            repeat: -1,\n            yoyo: true,\n            ease: 'Circ.easeIn',\n        });\n    }\n\n    start() {\n        this.scene.stop();\n        game.bus.$emit('showSetOpponent');\n        // this.scene.launch('SetOpponentScene', {\n        //     setPlaneScene: this.setPlaneScene,\n        // });\n    }\n}\n\nexport default StartScene;\n","import { render, staticRenderFns } from \"./SetOpponent.vue?vue&type=template&id=580e046a&scoped=true&\"\nimport script from \"./SetOpponent.vue?vue&type=script&lang=js&\"\nexport * from \"./SetOpponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SetOpponent.vue?vue&type=style&index=0&id=580e046a&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"580e046a\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/html/airplane/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('580e046a')) {\n      api.createRecord('580e046a', component.options)\n    } else {\n      api.reload('580e046a', component.options)\n    }\n    module.hot.accept(\"./SetOpponent.vue?vue&type=template&id=580e046a&scoped=true&\", function () {\n      api.rerender('580e046a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/js/vue-components/SetOpponent.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--7-0!../../../node_modules/style-loader/index.js!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-3!../../../node_modules/sass-loader/dist/cjs.js??ref--7-4!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=style&index=0&id=580e046a&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--7-0!../../../node_modules/style-loader/index.js!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-3!../../../node_modules/sass-loader/dist/cjs.js??ref--7-4!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=style&index=0&id=580e046a&scoped=true&lang=scss&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SetOpponent.vue?vue&type=template&id=580e046a&scoped=true&\"","// removed by extract-text-webpack-plugin"],"sourceRoot":""}